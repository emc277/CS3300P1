{"version":3,"file":null,"sources":["src/Annotation.js","src/AnnotationCollection.js","src/Handles.js","src/Note/alignment.js","src/Builder.js","src/Note/lineType-vertical.js","src/Note/lineType-horizontal.js","src/Connector/type-line.js","src/Connector/type-elbow.js","src/Connector/type-curve.js","src/Connector/end-arrow.js","src/Connector/end-dot.js","src/Subject/circle.js","src/Subject/rect.js","src/Subject/threshold.js","src/Subject/badge.js","src/Types-d3.js","src/Adapter-d3.js","index.js"],"sourcesContent":["\nexport default class Annotation {\n  constructor({ x=0, y=0, dy=0, dx=0, data, type, subject, connector, note, \n    disable, id, className }) {\n\n    this._dx = dx\n    this._dy = dy \n    this._x = x \n    this._y = y\n    this.id = id\n    this._className = className || ''\n\n    this.type = type || ''\n    this.data = data\n\n    this.note = note || {}\n    this.connector = connector || {}\n    this.subject = subject || {}\n\n    this.disable = disable || []\n  }\n\n  updatePosition(){\n    if (this.type.setPosition) { \n      this.type.setPosition() \n      if (this.type.subject.selectAll(':not(.handle)').nodes().length !== 0) {\n        this.type.redrawSubject()\n      }\n    }\n  }\n\n  get className() { return this._className }\n\n  set className(className){\n    this._className = className\n    if (this.type.setClassName) this.type.setClassName()\n  }\n\n  updateOffset(){\n    if (this.type.setOffset) {\n      this.type.setOffset() \n            \n      if (this.type.connector.selectAll(':not(.handle)').nodes().length !== 0) {\n        this.type.redrawConnector()\n      }\n\n      this.type.redrawNote()\n    }\n  }\n\n  get x() { return this._x }\n  set x(x) { \n    this._x = x; \n    this.updatePosition()\n  }\n\n  get y() { return this._y }\n  set y(y) { \n    this._y = y; \n    this.updatePosition()\n  }\n\n  get dx() { return this._dx }\n  set dx(dx) { \n    this._dx = dx; \n    this.updateOffset()\n  }\n\n  get dy() { return this._dy }\n  set dy(dy) { \n    this._dy = dy; \n    this.updateOffset()\n  }\n\n  get offset() { return { x: this._dx, y: this._dy }}\n\n  set offset({ x, y }) {\n    this._dx = x\n    this._dy = y\n    this.updateOffset()\n  }\n\n  get position() { return { x: this._x, y: this._y }}\n\n  set position({ x, y }) {\n    this._x = x\n    this._y = y\n    this.updatePosition()\n  }\n\n  get translation() {\n    return {\n    x: this._x + this._dx,\n    y: this._y + this._dy\n  }}\n\n  get json() { \n    const json = {\n      x: this._x,\n      y: this._y,\n      dx: this._dx,\n      dy: this._dy\n    }\n\n    if (this.data && Object.keys(this.data).length > 0) json.data = this.data\n    if (this.type) json.type = this.type\n    if (this._className) json.className = this._className\n\n    if (Object.keys(this.connector).length > 0) json.connector = this.connector\n    if (Object.keys(this.subject).length > 0) json.subject = this.subject\n    if (Object.keys(this.note).length > 0) json.note = this.note\n    \n    return json\n  }\n}","export default class AnnotationCollection {\n\n  constructor({ annotations, accessors, accessorsInverse }) {\n    this.accessors = accessors\n    this.accessorsInverse = accessorsInverse\n    this.annotations = annotations\n  }\n\n  clearTypes(newSettings) {\n    this.annotations.forEach(d => {\n      d.type = undefined\n      d.subject = newSettings && newSettings.subject || d.subject\n      d.connector = newSettings && newSettings.connector || d.connector\n      d.note = newSettings && newSettings.note || d.note\n    })\n  }\n\n  setPositionWithAccessors() {\n    this.annotations.forEach(d => {\n      d.type.setPositionWithAccessors(this.accessors)\n    })\n  }\n\n  editMode(editMode) { this.annotations.forEach(a => {\n      if (a.type) {\n        a.type.editMode = editMode\n        a.type.updateEditMode()\n      }\n    })\n  }\n\n  updateDisable(disable) {\n    this.annotations.forEach(a => {\n      a.disable = disable\n      if (a.type){\n        disable.forEach(d => {\n          if (a.type[d]){\n          a.type[d].remove && a.type[d].remove()\n          a.type[d] = undefined\n          }\n        })\n      }\n    })\n  }\n\n  updateTextWrap(textWrap) {\n    this.annotations.forEach(a => {\n      if (a.type && a.type.updateTextWrap){\n        a.type.updateTextWrap(textWrap)\n      }\n    })\n  }\n\n  updateNotePadding(notePadding) {\n    this.annotations.forEach(a => {\n      if (a.type){\n        a.type.notePadding = notePadding\n      }\n    })\n  }\n\n  get json() { \n    return this.annotations.map(a => {      \n      const json = a.json\n      if (this.accessorsInverse && a.data){\n        json.data = {}\n        Object.keys(this.accessorsInverse).forEach(k => {\n          json.data[k] = this.accessorsInverse[k]({ x: a.x, y: a.y})\n\n          //TODO make this feasible to map back to data for other types of subjects\n        })\n      }\n      return json\n    })\n  }\n\n  get noteNodes(){\n    return this.annotations.map(a => ({ ...a.type.getNoteBBoxOffset(), positionX: a.x, positionY: a.y }))\n  }\n\n  //TODO: come back and rethink if a.x and a.y are applicable in all situations\n  // get connectorNodes() {\n  //   return this.annotations.map(a => ({ ...a.type.getConnectorBBox(), startX: a.x, startY: a.y}))\n  // }\n\n  // get subjectNodes() {\n  //   return this.annotations.map(a => ({ ...a.type.getSubjectBBox(), startX: a.x, startY: a.y}))\n  // }\n\n  // get annotationNodes() {\n  //   return this.annotations.map(a => ({ ...a.type.getAnnotationBBox(), startX: a.x, startY: a.y}))\n  // }\n}\n","import { select } from 'd3-selection'\nimport { drag } from 'd3-drag'\n\n\nexport const pointHandle = ({ cx=0, cy=0 }) => {\n  return { move: { x: cx, y: cy} }\n}\n\nexport const circleHandles = ({ cx=0, cy =0, r1, r2, padding }) => {\n  const h = { move: { x: cx, y: cy}}\n       \n  if (r1 !== undefined) {\n    h.r1 = { x: cx + r1/Math.sqrt(2), y: cy + r1/Math.sqrt(2) }\n  }\n  \n  if (r2 !== undefined) {\n    h.r2 = { x: cx + r2/Math.sqrt(2), y: cy + r2/Math.sqrt(2) }\n  }\n\n  if (padding !== undefined) {\n    h.padding = { x: cx + r1 + padding, y: cy}\n  }\n\n  return h\n}\n\nexport const rectHandles = ({ x1=0, y1=0, x2=x1, y2=y1, width, height }) => {\n  \n  const w = width || Math.abs(x2 - x1)\n  const h = height || Math.abs(y2 - y1)\n\n  return {\n    move: {\n      x: Math.min(x1, x2) + w/2,\n      y: Math.min(y1, y2) - 10\n    },\n    width: {\n      x: Math.max(x1, x2),\n      y: Math.min(y1, y2) + h/2\n    },\n    height: {\n      x: Math.min(x1, x2) + w/2,\n      y: Math.max(y1, y2)\n    }\n  }\n}\n\nexport const lineHandles = ({ x1, y1, x2, y2, x, y}) => {\n\n  const minY = Math.min(y1, y2)\n  const minX = Math.min(x1, x2)\n\n  const height = Math.abs(y2 - y1)\n  const width = Math.abs(x2 - x1)\n  \n  return {\n    move: {\n      x: x || minX + width/2,\n      y: y || minY + height/2\n    }\n  }\n}\n\n//arc handles\nexport const addHandles = ({ group, handles, r=10}) => { \n   //give it a group and x,y to draw handles\n   //then give it instructions on what the handles change \n   const h = group.selectAll('circle.handle')\n    .data(handles)\n\n  h.enter()\n    .append('circle')\n    .attr('class', 'handle')\n    .call(drag()\n      .container(select('g.annotations').node())\n      .on('start', d => d.start && d.start(d))\n      .on('drag', d => d.drag && d.drag(d))\n      .on('end', d => d.end && d.end(d))\n    )\n\n  group.selectAll('circle.handle')\n    .attr('cx', d => d.x)\n    .attr('cy', d => d.y)\n    .attr('r', d => d.r || r)\n    .attr('class', d => `handle ${d.className || ''}`)\n\n  h.exit()\n    .remove()\n    \n}\n\n","\nexport const leftRightDynamic = (align, y) => {\n  if (align == \"dynamic\" || align == \"left\" || align == \"right\"){\n      if (y < 0){ align = \"top\" }\n      else { align = \"bottom\" } \n  }\n  return align\n}\n\nexport const topBottomDynamic = (align, x) => {\n  if (align == \"dynamic\" || align == \"top\" || align == \"bottom\"){\n    if (x < 0){ align = \"right\" }\n    else { align = \"left\" }      \n  }\n  return align\n}\n\n\nexport default ({ padding, bbox, align, orientation, offset }) => {\n    let x = -bbox.x \n    let y = -bbox.y\n\n   if ( orientation === \"topBottom\" ){\n      align = topBottomDynamic(align, offset.x)\n      if (offset.y < 0){ \n        y -= (bbox.height + padding)\n     } else {\n       y += padding\n     }\n\n      if ( align === \"middle\" ) {\n        x -= bbox.width/2\n      } else if (align === \"right\" ) {\n        x -= (bbox.width)\n      } \n\n    } else if ( orientation === \"leftRight\" ){\n      align = leftRightDynamic(align, offset.y)\n      if (offset.x < 0){ \n        x -= (bbox.width + padding) \n      } else {\n        x += padding\n      }\n\n       if ( align === \"middle\" ) {\n          y -= bbox.height/2\n       } else if (align === \"top\" ){\n          y -= (bbox.height )\n       }\n    } \n\n    return { x, y }\n}","import { line, arc, curveLinear, symbol, symbolTriangle } from \"d3-shape\"\n\nexport const lineBuilder = ({ data, curve=curveLinear, canvasContext, className }) => { \n  const lineGen = line()\n    .curve(curve)\n\n  const builder = {\n    type: 'path',\n    className,\n    data\n  }\n\n  if (canvasContext) {\n    lineGen.context(canvasContext)\n    builder.pathMethods = lineGen\n\n  } else {\n    builder.attrs = {\n      d: lineGen(data)\n    }\n  }\n\n  return builder\n}\n\nexport const arcBuilder = ({ data, canvasContext, className }) => {\n\n  const builder = {\n    type: 'path',\n    className,\n    data\n  }\n\n  const arcShape = arc()\n    .innerRadius(data.innerRadius || 0)\n    .outerRadius(data.outerRadius || data.radius || 2)\n    .startAngle(data.startAngle || 0)\n    .endAngle(data.endAngle || 2*Math.PI)\n\n  if (canvasContext) {\n    arcShape.context(canvasContext)\n    builder.pathMethods = lineGen\n\n  } else {\n    \n    builder.attrs = {\n      d: arcShape()\n    }\n  }\n\n  return builder\n}","import { lineBuilder } from '../Builder'\nimport { leftRightDynamic } from './alignment'\n\nexport default ({ align, x=0, y=0, bbox, offset, padding }) => {\n  align = leftRightDynamic(align, offset.y)\n\n  if (align == \"top\") { y -= bbox.height } \n  else if (align == \"middle\"){ y -= bbox.height/2 }\n\n  const data = [[x, y], [x, y + bbox.height]]\n  return { components: [lineBuilder({ data, className : \"note-line\" })] }\n}","import { lineBuilder } from '../Builder'\nimport { topBottomDynamic } from './alignment'\n\nexport default ({ align, x=0, y=0, offset, bbox, padding }) => {\n  align = topBottomDynamic(align, offset.x)\n\n  if (align == \"right\") { x -= bbox.width }\n  else if (align == \"middle\"){ x -= bbox.width/2 }\n\n  const data = [[x, y], [x + bbox.width, y]]\n  return { components: [lineBuilder({ data, className : \"note-line\" })] }\n}","import { lineBuilder } from '../Builder'\n\nexport const lineSetup = ({ type, subjectType }) => {\n  let annotation = type.annotation\n  let offset = annotation.position\n  \n  let x1 = annotation.x - offset.x,\n    x2 = x1 + annotation.dx,\n    y1 = annotation.y - offset.y,\n    y2 = y1 + annotation.dy\n\n\n const subjectData = annotation.subject\n\n  if (subjectType == \"circle\" && (subjectData.outerRadius || subjectData.radius)){\n    const h =  Math.sqrt((x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2))\n    const angle = Math.asin(-y2/h)\n    const r = subjectData.outerRadius || subjectData.radius + (subjectData.radiusPadding || 0)\n\n    x1 = Math.abs(Math.cos(angle)*r)*(x2 < 0 ? -1 : 1)\n    y1 = Math.abs(Math.sin(angle)*r)*(y2 < 0 ? -1 : 1)\n\n  }\n\n  if (subjectType == \"rect\"){\n      const { width, height } = subjectData\n      \n      if ((width > 0 && annotation.dx > 0) || (width < 0 && annotation.dx < 0)) {\n          if (Math.abs(width) > Math.abs(annotation.dx)) x1 = width/2\n          else x1 = width\n      } \n      if ((height > 0 && annotation.dy > 0) || (height < 0 && annotation.dy < 0)) {\n          if (Math.abs(height) > Math.abs(annotation.dy)) y1 = height/2\n          else y1 = height\n      }\n      if (x1 == width/2 && y1 == height/2){ x1 = x2; y1 = y2;}\n    }\n\n\n  return [[x1, y1], [x2, y2]]\n}\n\nexport default (connectorData) => {\n  const data = lineSetup(connectorData)\n  return { components: [lineBuilder({ data, className : \"connector\" })]} \n}","import { lineBuilder } from '../Builder'\n\nexport default ({ type, subjectType }) => {\n\n    const annotation = type.annotation\n    const offset = annotation.position\n\n    let x1 = annotation.x - offset.x,\n    x2 = x1 + annotation.dx,\n    y1 = annotation.y - offset.y,\n    y2 = y1 + annotation.dy\n\n    const subjectData = annotation.subject\n\n    if (subjectType == \"rect\"){\n      const { width, height } = subjectData\n      \n      if ((width > 0 && annotation.dx > 0) || (width < 0 && annotation.dx < 0)) {\n          if (Math.abs(width) > Math.abs(annotation.dx)) x1 = width/2\n          else x1 = width\n      } \n      if ((height > 0 && annotation.dy > 0) || (height < 0 && annotation.dy < 0)) {\n          if (Math.abs(height) > Math.abs(annotation.dy)) y1 = height/2\n          else y1 = height\n      }\n      if (x1 == width/2 && y1 == height/2){ x1 = x2; y1 = y2;}\n    }\n\n    let data = [[x1, y1], [x2, y2]]\n\n    let diffY = (y2 - y1)\n    let diffX = (x2 - x1)\n    let xe = x2 \n    let ye = y2\n    let opposite = (y2 < y1 && x2 > x1 || x2 < x1 && y2 > y1)? -1 : 1\n\n    if (Math.abs(diffX) < Math.abs(diffY)){\n      xe = x2\n      ye = y1 + diffX*opposite\n    } else {\n      ye = y2\n      xe = x1 + diffY*opposite\n    }\n    \n    if (subjectType == \"circle\" && (subjectData.outerRadius || subjectData.radius)){\n      const r = (subjectData.outerRadius || subjectData.radius) + (subjectData.radiusPadding || 0)\n      const length = r/Math.sqrt(2)\n\n      if (Math.abs(diffX) > length && Math.abs(diffY) > length){\n        x1 = length*(x2 < 0 ? -1 : 1)\n        y1 = length*(y2 < 0 ? -1 : 1)\n        data = [[x1, y1], [xe , ye ], [x2, y2]]\n\n      } else if (Math.abs(diffX) > Math.abs(diffY)){\n        const angle = Math.asin(-y2/r)\n        x1 = Math.abs(Math.cos(angle)*r)*(x2 < 0 ? -1 : 1)\n        data = [[ x1, y2], [x2, y2]]\n      } else {\n        const angle = Math.acos(x2/r)\n        y1 = Math.abs(Math.sin(angle)*r)*(y2 < 0 ? -1 : 1)\n        data = [[ x2, y1], [x2, y2]]\n      }\n    } else {\n      data = [[x1, y1], [xe , ye], [x2, y2]]\n    }\n\n    return { components: [lineBuilder({ data, className: \"connector\"})]}\n}\n","import { lineBuilder } from '../Builder'\nimport { event } from 'd3-selection'\nimport { lineSetup } from './type-line'\nimport { curveCatmullRom } from 'd3-shape'\nimport { pointHandle } from '../Handles'\n\nexport default ({ type, connectorData, subjectType }) => {\n\n  if (!connectorData){ connectorData = {} }\n  if (!connectorData.points || typeof connectorData.points === \"number\"){ \n    connectorData.points = createPoints(type.annotation.offset, connectorData.points) \n  }\n  if (!connectorData.curve){ connectorData.curve = curveCatmullRom }\n\n  let handles = []\n\n  if (type.editMode) {\n    const cHandles = connectorData.points\n      .map((c,i) => ({...pointHandle({cx: c[0], cy: c[1]}), index: i}))\n\n    const updatePoint = (index) => {      \n        connectorData.points[index][0] += event.dx\n        connectorData.points[index][1] += event.dy\n        type.redrawConnector()\n    }\n  \n    handles = type.mapHandles(cHandles\n      .map(h => ({ ...h.move, drag: updatePoint.bind(type, h.index)})))\n\n  }\n\n  let data = lineSetup({ type, subjectType })\n  data = [data[0], ...connectorData.points, data[1]]\n  const components = [lineBuilder({ data, curve: connectorData.curve, className: \"connector\" })]\n\n  return { components , handles }\n}\n\nconst createPoints = function( offset, anchors=2){\n  const diff = { x: offset.x/(anchors + 1), y: offset.y/(anchors + 1) }\n  const p = []\n\n  let i = 1 \n  for (; i <= anchors; i++){\n    p.push([diff.x*i + i%2*20, diff.y*i - i%2*20])\n  }\n  return p\n}","import { lineBuilder } from '../Builder'\n\nexport default ({ annotation, start, end }) => {\n  const offset = annotation.position\n  if (!start) { start = [annotation.dx, annotation.dy]} \n  else { start = [-end[0] + start[0], - end[1] + start[1]]}\n  if (!end) { end = [annotation.x - offset.x, annotation.y - offset.y]}\n\n  let x1 = end[0],\n    y1 = end[1];\n\n  let dx = start[0] \n  let dy = start[1] \n\n  let size = 10;\n  let angleOffset = 16/180*Math.PI\n  let angle = Math.atan(dy/dx) \n\n  if (dx < 0 ) {\n    angle += Math.PI\n  }\n\n  const data = [[x1, y1], \n    [Math.cos(angle + angleOffset)*size + x1, Math.sin(angle + angleOffset)*size + y1],\n    [Math.cos(angle - angleOffset)*size + x1, Math.sin(angle - angleOffset)*size + y1],\n    [x1, y1]]\n\n  //TODO add in reverse\n  // if (canvasContext.arrowReverse){\n  //   data = [[x1, y1], \n  //   [Math.cos(angle + angleOffset)*size, Math.sin(angle + angleOffset)*size],\n  //   [Math.cos(angle - angleOffset)*size, Math.sin(angle - angleOffset)*size],\n  //   [x1, y1]\n  //   ]\n  // } else {\n  //   data = [[x1, y1], \n  //   [Math.cos(angle + angleOffset)*size, Math.sin(angle + angleOffset)*size],\n  //   [Math.cos(angle - angleOffset)*size, Math.sin(angle - angleOffset)*size],\n  //   [x1, y1]\n  //   ]\n  // }\n\n  return { components: [lineBuilder({ data, className : 'connector-arrow' })] }\n}\n","import { arcBuilder } from '../Builder'\n\nexport default ({ line }) => {\n  \n  let dot = arcBuilder({ className: 'connector-dot', data: { radius: 3} })\n  dot.attrs.transform = `translate(${line.data[0][0]}, ${line.data[0][1]})`\n  \n  return { components: [dot] }\n}\n","import { circleHandles } from '../Handles'\nimport { arcBuilder } from '../Builder'\nimport { event } from 'd3-selection'\n\nexport default ({ subjectData, type}) => {\n    if (!subjectData.radius && !subjectData.outerRadius ){ subjectData.radius = 20 }\n\n    let handles = []\n    const c = arcBuilder({ data: subjectData, className: \"subject\" })\n    if (type.editMode){\n      const h = circleHandles({\n        r1: c.data.outerRadius || c.data.radius,\n        r2: c.data.innerRadius,\n        padding: subjectData.radiusPadding\n      })\n\n      const updateRadius = (attr) => {      \n        const r = subjectData[attr] + event.dx*Math.sqrt(2)\n        subjectData[attr] = r\n        type.redrawSubject()\n        type.redrawConnector()\n      }\n\n      const cHandles = [\n        { ...h.r1, drag: updateRadius.bind(type, subjectData.outerRadius !== undefined ? 'outerRadius': 'radius')}\n        ]\n\n      if (subjectData.innerRadius){\n        cHandles.push({ ...h.r2, drag: updateRadius.bind(type, 'innerRadius')})\n      }\n      handles = type.mapHandles(cHandles)\n    }\n\n    return { components: [c], handles }\n}","import { circleHandles } from '../Handles'\nimport { lineBuilder } from '../Builder'\nimport { event } from 'd3-selection'\n\nexport default ({ subjectData, type}) => {\n    if (!subjectData.width){ subjectData.width = 100 }\n    if (!subjectData.height){ subjectData.height = 100 }\n\n    let handles = []\n    let { width, height } = subjectData\n\n    const data = [[0, 0], \n      [ width, 0], \n      [ width, height], \n      [0, height],\n      [0, 0]]\n    let rect = lineBuilder({ data, className : 'subject'})\n\n    if (type.editMode){\n\n      const updateWidth = (attr) => {  \n        subjectData.width = event.x\n        type.redrawSubject()\n        type.redrawConnector()\n      }\n\n      const updateHeight = () => {\n        subjectData.height = event.y\n        type.redrawSubject()\n        type.redrawConnector()\n      }\n\n      const rHandles = [{ x: width, y: height/2, drag: updateWidth.bind(type) },\n        { x: width/2, y: height, drag: updateHeight.bind(type) }\n      ]\n\n      handles = type.mapHandles(rHandles)\n\n    }\n\n    return { components: [rect], handles }\n}","import { circleHandles } from '../Handles'\nimport { lineBuilder } from '../Builder'\n\n\nexport default ({ subjectData, type }) => {\n  const offset = type.annotation.position\n\n  let x1 = (subjectData.x1 !== undefined ? subjectData.x1 : offset.x) - offset.x,\n    x2 = (subjectData.x2 !== undefined ? subjectData.x2 : offset.x) - offset.x,\n    y1 = (subjectData.y1 !== undefined ? subjectData.y1 : offset.y) - offset.y,\n    y2 = (subjectData.y2 !== undefined ? subjectData.y2 : offset.y) - offset.y\n\n  const data = [[x1, y1], [x2, y2]]\n  return { components: [lineBuilder({ data, className : 'subject'})]}\n}","import { circleHandles } from '../Handles'\nimport { lineBuilder, arcBuilder } from '../Builder'\nimport { event } from 'd3-selection'\n\nexport default ({ subjectData, type }) => {\n  if (!subjectData.radius ) subjectData.radius = 14\n  if (!subjectData.x) subjectData.x =\"left\"\n  if (!subjectData.y) subjectData.y = \"top\"\n\n  let handles = []\n  const radius = subjectData.radius\n  const innerRadius = radius*.7\n  const x = subjectData.x == \"left\" ? -radius : radius\n  const y = subjectData.y == \"top\" ? -radius : radius\n  const transform = `translate(${x}, ${y})`\n  const circlebg = arcBuilder({ className: 'subject', data: { radius} }) \n  circlebg.attrs.transform = transform\n\n  const circle = arcBuilder({ className: 'subject-ring', data: { outerRadius: radius, innerRadius} })\n  circle.attrs.transform = transform\n\n  const pointer = lineBuilder({ className: 'subject-pointer',\n    data: [[0, 0], [x, 0], [0, y], [0, 0]]\n  })\n\n  if (type.editMode){\n\n    const dragBadge = () => {\n      subjectData.x = event.x < 0 ? \"left\" : \"right\"\n      subjectData.y = event.y < 0 ? \"top\" : \"bottom\"\n      type.redrawSubject()\n    }\n\n    const bHandles = [{ x: x*2, y: y*2, drag: dragBadge.bind(type)}]\n    handles = type.mapHandles(bHandles)\n\n  }\n\n  let text\n  if (subjectData.text){\n    text = {\n      type: \"text\",\n      className: \"badge-text\",\n      attrs: {\n        text: subjectData.text,\n        \"text-anchor\": \"middle\",\n        dy: \".25em\",\n        x,\n        y\n      }\n    }\n  }\n  return { components: [pointer, circlebg, circle, text], handles }\n}","import { select, event } from 'd3-selection'\nimport { drag } from 'd3-drag'\nimport { Annotation } from './Annotation'\nimport { addHandles } from './Handles'\n\n//Note options\nimport noteAlignment from './Note/alignment'\nimport noteVertical from './Note/lineType-vertical'\nimport noteHorizontal from './Note/lineType-horizontal'\n\n//Connector options\nimport connectorLine from './Connector/type-line'\nimport connectorElbow from './Connector/type-elbow'\nimport connectorCurve from './Connector/type-curve'\nimport connectorArrow from './Connector/end-arrow'\nimport connectorDot from './Connector/end-dot'\n\n//Subject options\nimport subjectCircle from './Subject/circle'\nimport subjectRect from './Subject/rect'\nimport subjectThreshold from './Subject/threshold'\nimport subjectBadge from './Subject/badge'\n\nexport class Type {\n  constructor({ a, annotation, editMode, dispatcher, notePadding, accessors }) {\n    this.a = a\n\n    this.note = annotation.disable.indexOf(\"note\") === -1 && a.select('g.annotation-note')\n    this.noteContent = this.note && a.select('g.annotation-note-content')\n    this.connector = annotation.disable.indexOf(\"connector\") === -1 && a.select('g.annotation-connector')\n    this.subject = annotation.disable.indexOf(\"subject\") === -1 && a.select('g.annotation-subject')\n\n    if (dispatcher){\n      const handler = addHandlers.bind(null, dispatcher, annotation)\n      handler({ component: this.note, name: 'note' })\n      handler({ component: this.connector, name: 'connector' })\n      handler({ component: this.subject, name: 'subject' })\n    }\n  \n    this.annotation = annotation\n    this.editMode = annotation.editMode || editMode\n    this.notePadding = notePadding || 3\n    this.offsetCornerX = 0\n    this.offsetCornerY = 0\n\n    if (accessors && annotation.data){\n      this.init(accessors)\n    }\n  }\n\n  init(accessors) {\n    if (!this.annotation.x){\n      this.mapX(accessors)\n    }\n    if (!this.annotation.y){\n      this.mapY(accessors)\n    }\n  }\n\n  mapY(accessors){\n    if (accessors.y){\n      this.annotation.y = accessors.y(this.annotation.data)\n    }\n  }\n\n  mapX(accessors) {\n    if (accessors.x){\n      this.annotation.x = accessors.x(this.annotation.data)\n    }\n  }\n\n\n  updateEditMode () {\n    this.a.selectAll('circle.handle')\n      .remove()\n  }\n\n  drawOnSVG (component, builders) {\n    if (!Array.isArray(builders)){\n      builders = [ builders ]\n    }\n\n    builders\n      .filter(b => b)\n      .forEach(({ type, className, attrs, handles}) => {\n        if (type === \"handle\"){\n          addHandles({ group: component, r: attrs && attrs.r, handles })\n        } else {\n          newWithClass(component, [this.annotation], type, className)\n          \n          const el = component.select(`${type}.${className}`) \n          const attrKeys = Object.keys(attrs)\n          attrKeys.forEach(attr => {\n            if (attr === \"text\"){\n              el.text(attrs[attr])\n            } else {\n              el.attr(attr, attrs[attr])\n            }\n          })\n        }\n      })\n  }\n\n  //TODO: how to extend this to a drawOnCanvas mode? \n\n  getNoteBBox() { return bboxWithoutHandles(this.note, '.annotation-note-content text')}\n  getNoteBBoxOffset() { \n    const bbox = bboxWithoutHandles(this.note, '.annotation-note-content')\n    const transform = this.noteContent.attr('transform').split(/\\(|\\,|\\)/g)\n    bbox.offsetCornerX = parseFloat(transform[1]) + this.annotation.dx\n    bbox.offsetCornerY = parseFloat(transform[2]) + this.annotation.dy\n    bbox.offsetX = this.annotation.dx\n    bbox.offsetY = this.annotation.dy\n    return bbox \n  }\n\n  // getConnectorBBox() { return bboxWithoutHandles(this.connector)}\n  // getSubjectBBox() { return bboxWithoutHandles(this.subject)}\n  // getAnnotationBBox() { return bboxWithoutHandles(this.a)}\n\n  drawSubject (context={}) {\n    const subjectData = this.annotation.subject\n    const type = context.type\n    const subjectParams = { type: this, subjectData}\n\n    let subject = {}\n    if (type === \"circle\") subject = subjectCircle(subjectParams)\n    else if (type === \"rect\") subject = subjectRect(subjectParams)\n    else if (type === \"threshold\") subject = subjectThreshold(subjectParams)\n    else if (type === \"badge\") subject = subjectBadge(subjectParams)\n\n    let { components=[], handles=[] } = subject\n    if (this.editMode){\n      handles = handles.concat(this.mapHandles([{ drag: this.dragSubject.bind(this)}]))\n      components.push({ type: \"handle\", handles })\n    }\n\n    return components\n }\n\n  drawConnector (context={}) {\n    const connectorData = this.annotation.connector\n    const type = connectorData.type || context.type\n    const connectorParams = { type: this, connectorData}\n    connectorParams.subjectType = this.typeSettings && this.typeSettings.subject && this.typeSettings.subject.type \n\n    let connector = {}\n    if (type === \"curve\") connector = connectorCurve(connectorParams)\n    else if (type === \"elbow\") connector = connectorElbow(connectorParams)\n    else connector = connectorLine(connectorParams)\n\n    let { components=[], handles=[] } = connector\n    const line = components[0]\n    const endType = connectorData.end || context.end\n    let end = {}\n    if (endType === \"arrow\") end = connectorArrow({ annotation: this.annotation, start: line.data[1], end: line.data[0] })\n    else if (endType === \"dot\") end = connectorDot({ line })\n\n    if (end.components){ components = components.concat(end.components)}\n\n    if (this.editMode){\n      if (handles.length !== 0) components.push({ type: \"handle\", handles })\n    }\n    return components;\n  }\n\n  drawNote (context={}) {\n    const noteData = this.annotation.note\n    const align = noteData.align || context.align || 'dynamic'\n    const noteParams = { bbox: context.bbox, align, offset: this.annotation.offset }\n    const lineType = noteData.lineType || context.lineType\n    let note={}\n    if (lineType == \"vertical\") note = noteVertical(noteParams)\n    else if (lineType == \"horizontal\") note = noteHorizontal(noteParams)\n\n    let { components=[], handles=[] } = note\n    if (this.editMode) {\n      handles = this.mapHandles([{ x: 0, y: 0, drag: this.dragNote.bind(this)}])\n      components.push({ type: \"handle\", handles })\n    }\n    return components\n  }\n\n  drawNoteContent (context) {\n    const noteData = this.annotation.note\n    const padding = noteData.padding || this.notePadding\n    let orientation = noteData.orientation || context.orientation || 'topBottom'\n    const lineType = noteData.lineType || context.lineType\n    const align = noteData.align || context.align || 'dynamic'\n    const subjectType = this.typeSettings && this.typeSettings.subject && this.typeSettings.subject.type \n    \n    if (lineType == \"vertical\") orientation =  \"leftRight\"\n    else if (lineType == \"horizontal\") orientation = \"topBottom\"\n\n    const noteParams = { padding, bbox: context.bbox, offset: \n    this.annotation.offset, orientation, align }\n\n    const { x, y } = noteAlignment(noteParams)\n    this.offsetCornerX = x + this.annotation.dx\n    this.offsetCornerY = y + this.annotation.dy\n    this.note && this.noteContent.attr('transform', `translate(${x}, ${y})`)\n    \n    return []\n  } \n\n  drawOnScreen(component, drawFunction) { return this.drawOnSVG( component, drawFunction) }\n\n  redrawSubject(){\n    this.subject && this.drawOnScreen( this.subject, this.drawSubject())\n  }\n\n  redrawConnector(bbox=this.getNoteBBox()){\n    this.connector && this.drawOnScreen( this.connector, this.drawConnector())\n  }\n\n  redrawNote(bbox=this.getNoteBBox()){\n    this.noteContent && this.drawOnScreen( this.noteContent, this.drawNoteContent({ bbox }))\n    this.note && this.drawOnScreen( this.note, this.drawNote({ bbox }))  \n  }\n\n  setPosition(){\n    const position = this.annotation.position \n    this.a.attr('transform', `translate(${position.x}, ${position.y})`)\n  }\n\n  setOffset(){\n    if (this.note){\n      const offset = this.annotation.offset\n      this.note.attr('transform', `translate(${offset.x}, ${offset.y})`)\n    }\n  }\n\n  setPositionWithAccessors(accessors){\n    if (accessors && this.annotation.data){\n      this.mapX(accessors)\n      this.mapY(accessors)\n    }\n    this.setPosition()\n  }\n\n\n  setClassName(){\n    this.a.attr(\"class\", `annotation ${this.className && this.className()} ${this.editMode ? \"editable\" : \"\"} ${this.annotation.className || ''}`)\n  }\n\n  draw() {\n    this.setClassName()\n    this.setPosition()\n    this.setOffset()\n    this.redrawSubject()\n    this.redrawConnector()\n    this.redrawNote()\n  }\n\n  dragstarted() { event.sourceEvent.stopPropagation(); \n    this.a.classed(\"dragging\", true) \n    this.a.selectAll(\"circle.handle\").style(\"pointer-events\", \"none\")\n  }\n  dragended() { \n    this.a.classed(\"dragging\", false)\n    this.a.selectAll(\"circle.handle\").style(\"pointer-events\", \"all\")\n  }\n\n  dragSubject() {\n    const position = this.annotation.position\n    position.x += event.dx\n    position.y += event.dy\n    this.annotation.position = position\n  }\n\n  dragNote() {\n    const offset = this.annotation.offset\n    offset.x += event.dx\n    offset.y += event.dy\n    this.annotation.offset = offset\n  }\n\n  mapHandles(handles) {\n    return handles\n    .map(h => ({ ...h, \n      start: this.dragstarted.bind(this), end: this.dragended.bind(this) }))\n  }\n}\n\nexport const customType = (initialType, typeSettings, init) => {\n  return class customType extends initialType {\n    constructor (settings) {\n      super(settings)\n      this.typeSettings = typeSettings\n\n      if (typeSettings.disable){\n        typeSettings.disable.forEach(d => {\n          this[d] = undefined\n          if (d == \"note\"){\n            this.noteContent = undefined\n          }\n        })\n      }\n    }\n\n    static init(annotation, accessors){ \n      super.init(annotation, accessors); \n      if (init) {\n        annotation = init(annotation, accessors) \n      }\n      return annotation\n    }\n\n    className(){ return `${typeSettings.className || ''} ${super.className && super.className() || ''}`}\n\n    drawSubject(context){\n       this.typeSettings.subject = Object.assign({}, typeSettings.subject, this.typeSettings.subject)\n       return super.drawSubject({ ...context, ...this.typeSettings.subject })\n    }\n\n    drawConnector(context, subjectContext){\n      this.typeSettings.connector = Object.assign({}, typeSettings.connector, this.typeSettings.connector)\n      return super.drawConnector({ ...context, ...typeSettings.connector, ...this.typeSettings.connector })\n    }\n\n    drawNote(context){\n      this.typeSettings.note = Object.assign({}, typeSettings.note, this.typeSettings.note)\n      return super.drawNote({ ...context, ...typeSettings.note, ...this.typeSettings.note })\n    }\n\n    drawNoteContent(context){\n      return super.drawNoteContent({ ...context, ...typeSettings.note, ...this.typeSettings.note })\n    }\n  }\n}\n\nexport class d3NoteText extends Type {\n\n  constructor(params){\n    super(params)\n    this.textWrap = params.textWrap || 120\n    this.drawText()\n  }\n\n  updateTextWrap (textWrap) {\n    this.textWrap = textWrap\n    this.drawText()\n  }\n\n  //TODO: add update text functionality\n\n  drawText () {\n    if (this.note){\n      \n      newWithClass(this.note, [this.annotation], 'g', 'annotation-note-content')\n\n      const noteContent = this.note.select('g.annotation-note-content')\n      newWithClass(noteContent, [this.annotation], 'rect', 'annotation-note-bg')\n      newWithClass(noteContent, [this.annotation], 'text', 'annotation-note-label')\n      newWithClass(noteContent, [this.annotation], 'text', 'annotation-note-title')\n\n      let titleBBox = { height: 0 }\n      const label = this.a.select('text.annotation-note-label')\n      const wrapLength = this.annotation.note && this.annotation.note.wrap || \n        this.typeSettings && this.typeSettings.note && this.typeSettings.note.wrap ||\n        this.textWrap \n\n      if (this.annotation.note.title){\n        const title = this.a.select('text.annotation-note-title')\n        title.text(this.annotation.note.title)\n          .attr('dy', '1.1em')\n        title.call(wrap, wrapLength)\n        titleBBox = title.node().getBBox()\n      }\n\n      label.text(this.annotation.note.label)\n        .attr('dy', '1em')\n      label.call(wrap, wrapLength)\n\n      label.attr('y', titleBBox.height * 1.1 || 0)\n\n      const bbox = this.getNoteBBox()\n      this.a.select('rect.annotation-note-bg')\n        .attr('width', bbox.width)\n        .attr('height', bbox.height)\n    }\n  }\n}\n\nexport const d3Label = customType(d3NoteText, {\n  className: \"label\", \n  note: { align: \"middle\"}\n})\n\nexport const d3Callout = customType(d3NoteText, {\n  className: \"callout\",\n  note: { lineType: \"horizontal\" }\n})\n\nexport const d3CalloutElbow = customType(d3Callout, {\n  className: \"callout elbow\",\n  connector: { type: \"elbow\" }\n})\n\nexport const d3CalloutCurve = customType(d3Callout, {\n  className: \"callout curve\",\n  connector: { type: \"curve\" }\n})\n\nexport const d3Badge = customType(Type, {\n  className: \"badge\",\n  subject: { type: \"badge\"},\n  disable: ['connector', 'note']\n})\n\n\nexport const d3CalloutCircle = customType(d3CalloutElbow, {\n  className: \"callout circle\",\n  subject: { type: \"circle\"}\n})\n\nexport const d3CalloutRect = customType(d3CalloutElbow, {\n  className: \"callout rect\",\n  subject: { type: \"rect\"}\n})\n\n\nclass ThresholdMap extends d3Callout {\n\n  mapY(accessors){\n    super.mapY(accessors)\n    const a = this.annotation\n    if ((a.subject.x1 || a.subject.x2) && a.data && accessors.y){\n      a.y = accessors.y(a.data)\n    }\n  }\n\n  mapX(accessors) {\n    super.mapX(accessors)\n    const a = this.annotation\n    if ((a.subject.y1 || a.subject.y2) && a.data && accessors.x){\n      a.x = accessors.x(a.data)\n    }\n  }\n}\n\nexport const d3XYThreshold = customType(ThresholdMap, {\n  className: \"callout xythreshold\",\n  subject: { type: \"threshold\"}\n})\n\n\n\nexport const newWithClass = (a, d, type, className) => {\n  const group = a.selectAll(`${type}.${className}`).data(d)\n  group.enter()\n    .append(type)\n    .merge(group)\n    .attr('class', className)\n\n  group.exit().remove()\n  return a\n}\n\n\nconst addHandlers = ( dispatcher, annotation, { component, name }) => {\n  if (component){\n    component\n    .on(\"mouseover.annotations\", () => {\n      dispatcher.call(`${name}over`, component, annotation)})\n    .on(\"mouseout.annotations\", () => dispatcher.call(`${name}out`, component, annotation))\n    .on(\"click.annotations\", () => dispatcher.call(`${name}click`, component, annotation))\n  }\n}\n\n//Text wrapping code adapted from Mike Bostock\nconst wrap = (text, width) => {\n  text.each(function() {\n    var text = select(this),\n        words = text.text().split(/[ \\t\\r\\n]+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = .2, //ems\n        y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")) || 0,\n        tspan = text.text(null)\n          .append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"dy\", lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n}\n\nconst bboxWithoutHandles = (selection, selector=':not(.handle)') => {\n  if (!selection){\n    return { x: 0, y: 0, width: 0, height: 0}\n  }\n\n  return selection.selectAll(selector).nodes().reduce((p, c) => {\n        const bbox = c.getBBox()\n        p.x = Math.min(p.x, bbox.x)\n        p.y = Math.min(p.y, bbox.y)\n        p.width = Math.max(p.width, bbox.width)\n        p.height += bbox.height\n        return p\n      }, { x: 0, y: 0, width: 0, height: 0});\n}\n\nexport default {\n  Type,\n  d3Label,\n  d3Callout,\n  d3CalloutElbow,\n  d3CalloutCurve,\n  d3CalloutCircle,\n  d3CalloutRect,\n  d3XYThreshold,\n  d3Badge,\n  customType\n}\n","import Annotation from './Annotation'\nimport AnnotationCollection from './AnnotationCollection'\nimport { newWithClass, d3Callout } from './Types-d3'\nimport { select } from 'd3-selection'\nimport { dispatch } from 'd3-dispatch';\n\n\nexport default function annotation(){\n  let annotations = [],\n    collection,\n    context, //TODO: add canvas functionality\n    disable = [],\n    accessors = {},\n    accessorsInverse = {},\n    editMode = false,\n    ids,\n    type = d3Callout,\n    textWrap,\n    notePadding,\n    annotationDispatcher = dispatch(\n    \"subjectover\", \"subjectout\", \"subjectclick\", \n    \"connectorover\", \"connectorout\", \"connectorclick\", \n    \"noteover\", \"noteout\", \"noteclick\"),\n    sel;\n\n  const annotation = function(selection){\n    sel = selection\n    //TODO: check to see if this is still needed    \n    if (!editMode){\n      selection.selectAll(\"circle.handle\")\n        .remove()\n    }\n\n    const translatedAnnotations = annotations\n      .map(a => {\n        if (!a.type) { a.type = type }\n        if (!a.disable) {a.disable = disable}\n        return new Annotation(a)\n      });\n\n    collection = new AnnotationCollection ({\n      annotations: translatedAnnotations,\n      accessors,\n      accessorsInverse,\n      ids\n    })\n    \n\n    const annotationG = selection.selectAll('g').data([collection])\n    annotationG.enter().append('g').attr('class', `annotations`)\n    \n    const group = selection.select('g.annotations')\n    newWithClass(group, collection.annotations, 'g', 'annotation')\n\n    const annotation = group.selectAll('g.annotation')\n    \n    annotation \n      .each(function(d) {\n        const a = select(this)\n        const position = d.position\n\n        a.attr('class', 'annotation')\n\n        newWithClass(a, [d], 'g', 'annotation-connector')\n        newWithClass(a, [d], 'g', 'annotation-subject')\n        newWithClass(a, [d], 'g', 'annotation-note')\n        newWithClass(a.select('g.annotation-note'), [d], 'g', 'annotation-note-content')\n\n        d.type = new d.type({ a, annotation: d, textWrap, notePadding, editMode, \n          dispatcher: annotationDispatcher, accessors })\n        d.type.draw()\n      })\n  }\n\n  annotation.json = function() {\n    console.log('Annotations JSON was copied to your clipboard. Please note the annotation type is not JSON compatible. It appears in the objects array in the console, but not in the copied JSON.', collection.json)\n    window.copy(JSON.stringify(collection.json.map(a => { delete a.type; return a })))\n    return annotation\n  }\n\n  annotation.update = function(){\n    if (annotations && collection){\n      annotations = collection.annotations.map((a, i) => { a.type.draw(); return a }) \n    }\n    return annotation\n  }\n\n  annotation.updatedAccessors = function(){\n    collection.setPositionWithAccessors()\n    annotations = collection.annotations\n    return annotation\n  }\n\n  annotation.disable = function(_){\n    if (!arguments.length) return disable;\n    disable = _\n    if (collection) { \n      collection.updateDisable(disable)\n      annotations = collection.annotations\n    }\n    return annotation;\n  }\n\n  annotation.textWrap = function(_){\n    if (!arguments.length) return textWrap;\n    textWrap = _\n    if (collection) { \n      collection.updateTextWrap(textWrap)\n      annotations = collection.annotations\n    }\n    return annotation;\n  }\n\n  annotation.notePadding = function(_){\n    if (!arguments.length) return notePadding;\n    notePadding = _\n    if (collection) { \n      collection.updateNotePadding(notePadding)\n      annotations = collection.annotations\n    }\n    return annotation;\n  }\n\n  annotation.type = function(_, settings) {\n    if (!arguments.length) return type;\n    type = _;\n    if (collection) { \n      collection.annotations.map(a => {\n     \n        a.type.note && a.type.note.selectAll(\"*:not(.annotation-note-content)\").remove()\n        a.type.noteContent && a.type.noteContent.selectAll(\"*\").remove()\n        a.type.subject && a.type.subject.selectAll(\"*\").remove()\n        a.type.connector && a.type.connector.selectAll(\"*\").remove()\n        a.type.typeSettings = {}\n        a.type = type\n\n        a.subject = settings && settings.subject || a.subject\n        a.connector = settings && settings.connector || a.connector\n        a.note = settings && settings.note || a.note\n      })\n\n      annotations = collection.annotations\n    }\n    return annotation;\n  }\n\n  annotation.annotations = function(_) {\n    if (!arguments.length) return collection && collection.annotations || annotations;\n    annotations = _\n    return annotation;\n  };\n\n  annotation.context = function(_) {\n    if (!arguments.length) return context;\n    context = _\n    return annotation;\n  }; \n\n  annotation.accessors = function(_) {\n    if (!arguments.length) return accessors;\n    accessors = _;\n    return annotation\n  }\n\n  annotation.accessorsInverse = function(_) {\n    if (!arguments.length) return accessorsInverse;\n    accessorsInverse = _;\n    return annotation\n  }\n\n  annotation.ids = function(_) {\n    if (!arguments.length) return ids;\n    ids = _;\n    return annotation\n  }\n\n  annotation.editMode = function(_) {\n    if (!arguments.length) return editMode;\n    editMode = _\n\n    if (sel){\n      sel.selectAll('g.annotation')\n        .classed('editable', editMode)\n    }\n\n    if (collection) { \n      collection.editMode(editMode)\n      annotations = collection.annotations\n    }\n    return annotation\n  }\n\n  annotation.collection = function(_) {\n    if (!arguments.length) return collection;\n    collection = _\n    return annotation\n  }\n\n  annotation.on = function(){\n    const value = annotationDispatcher.on.apply(annotationDispatcher, arguments)\n    return value === annotationDispatcher ? annotation : value;\n  }\n\n  return annotation;\n\n};","import annotation from './src/Adapter-d3'\nimport { Type, d3Label, d3Callout, d3CalloutCurve, d3CalloutElbow, d3CalloutCircle, \n d3CalloutRect, d3XYThreshold, d3Badge, customType } from './src/Types-d3'\n\nexport {\n  annotation,\n  Type as annotationTypeBase ,\n  d3Label as annotationLabel ,\n  d3Callout as annotationCallout ,\n  d3CalloutCurve as annotationCalloutCurve ,\n  d3CalloutElbow as annotationCalloutElbow ,\n  d3CalloutCircle as annotationCalloutCircle ,\n  d3CalloutRect as annotationCalloutRect ,\n  d3XYThreshold as annotationXYThreshold ,\n  d3Badge as annotationBadge ,\n  customType as annotationCustomType \n}\n\nexport default {\n  annotation,\n  annotationTypeBase : Type,\n  annotationLabel : d3Label,\n  annotationCallout : d3Callout,\n  annotationCalloutCurve : d3CalloutCurve,\n  annotationCalloutElbow : d3CalloutElbow,\n  annotationCalloutCircle : d3CalloutCircle,\n  annotationCalloutRect : d3CalloutRect,\n  annotationXYThreshold : d3XYThreshold,\n  annotationBadge : d3Badge,\n  annotationCustomType : customType\n}"],"names":["Annotation","x","y","dy","dx","data","type","subject","connector","note","disable","id","className","_dx","_dy","_x","_y","_className","setPosition","selectAll","nodes","length","redrawSubject","setOffset","redrawConnector","redrawNote","setClassName","updatePosition","updateOffset","json","Object","keys","AnnotationCollection","annotations","accessors","accessorsInverse","newSettings","forEach","d","undefined","setPositionWithAccessors","editMode","a","updateEditMode","remove","textWrap","updateTextWrap","notePadding","map","k","getNoteBBoxOffset","positionX","positionY","pointHandle","cx","cy","move","circleHandles","r1","r2","padding","h","Math","sqrt","addHandles","group","handles","r","enter","append","attr","call","drag","container","select","node","on","start","end","exit","leftRightDynamic","align","topBottomDynamic","bbox","orientation","offset","height","width","lineBuilder","curve","curveLinear","canvasContext","lineGen","line","builder","context","pathMethods","attrs","arcBuilder","arcShape","arc","innerRadius","outerRadius","radius","startAngle","endAngle","PI","components","lineSetup","subjectType","annotation","position","x1","x2","y1","y2","subjectData","angle","asin","radiusPadding","abs","cos","sin","connectorData","diffY","diffX","xe","ye","opposite","acos","points","createPoints","curveCatmullRom","cHandles","c","i","index","updatePoint","event","mapHandles","bind","anchors","diff","p","push","size","angleOffset","atan","dot","transform","updateRadius","rect","updateWidth","updateHeight","rHandles","circlebg","circle","pointer","dragBadge","bHandles","text","Type","dispatcher","indexOf","noteContent","handler","addHandlers","component","name","offsetCornerX","offsetCornerY","init","mapX","mapY","builders","Array","isArray","filter","b","newWithClass","el","attrKeys","bboxWithoutHandles","split","parseFloat","offsetX","offsetY","subjectParams","subjectCircle","subjectRect","subjectThreshold","subjectBadge","concat","dragSubject","connectorParams","typeSettings","connectorCurve","connectorElbow","connectorLine","endType","connectorArrow","connectorDot","noteData","noteParams","lineType","noteVertical","noteHorizontal","dragNote","noteAlignment","drawFunction","drawOnSVG","drawOnScreen","drawSubject","getNoteBBox","drawConnector","drawNoteContent","drawNote","sourceEvent","stopPropagation","classed","style","dragstarted","dragended","customType","initialType","settings","babelHelpers.get","assign","subjectContext","d3NoteText","params","drawText","titleBBox","label","wrapLength","wrap","title","getBBox","d3Label","d3Callout","d3CalloutElbow","d3CalloutCurve","d3Badge","d3CalloutCircle","d3CalloutRect","ThresholdMap","d3XYThreshold","merge","each","words","reverse","word","lineNumber","lineHeight","tspan","pop","join","getComputedTextLength","selection","selector","reduce","min","max","collection","ids","annotationDispatcher","dispatch","sel","translatedAnnotations","annotationG","draw","console","log","window","copy","JSON","stringify","update","updatedAccessors","_","arguments","updateDisable","updateNotePadding","value","apply","annotationTypeBase","annotationLabel","annotationCallout","annotationCalloutCurve","annotationCalloutElbow","annotationCalloutCircle","annotationCalloutRect","annotationXYThreshold","annotationBadge","annotationCustomType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MACqBA;AACnB,EAAA,4BAC4B;AAAA,EAAA,sBADdC,CACc;AAAA,EAAA,QADdA,CACc,0BADZ,CACY;AAAA,EAAA,sBADTC,CACS;AAAA,EAAA,QADTA,CACS,0BADP,CACO;AAAA,EAAA,uBADJC,EACI;AAAA,EAAA,QADJA,EACI,2BADD,CACC;AAAA,EAAA,uBADEC,EACF;AAAA,EAAA,QADEA,EACF,2BADK,CACL;AAAA,EAAA,QADQC,IACR,QADQA,IACR;AAAA,EAAA,QADcC,IACd,QADcA,IACd;AAAA,EAAA,QADoBC,OACpB,QADoBA,OACpB;AAAA,EAAA,QAD6BC,SAC7B,QAD6BA,SAC7B;AAAA,EAAA,QADwCC,IACxC,QADwCA,IACxC;AAAA,EAAA,QAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,EAAA,QAAjBC,EAAiB,QAAjBA,EAAiB;AAAA,EAAA,QAAbC,SAAa,QAAbA,SAAa;AAAA,EAAA;;;AAE1B,EAAA,SAAKC,GAAL,GAAWT,EAAX;AACA,EAAA,SAAKU,GAAL,GAAWX,EAAX;AACA,EAAA,SAAKY,EAAL,GAAUd,CAAV;AACA,EAAA,SAAKe,EAAL,GAAUd,CAAV;AACA,EAAA,SAAKS,EAAL,GAAUA,EAAV;AACA,EAAA,SAAKM,UAAL,GAAkBL,aAAa,EAA/B;;AAEA,EAAA,SAAKN,IAAL,GAAYA,QAAQ,EAApB;AACA,EAAA,SAAKD,IAAL,GAAYA,IAAZ;;AAEA,EAAA,SAAKI,IAAL,GAAYA,QAAQ,EAApB;AACA,EAAA,SAAKD,SAAL,GAAiBA,aAAa,EAA9B;AACA,EAAA,SAAKD,OAAL,GAAeA,WAAW,EAA1B;;AAEA,EAAA,SAAKG,OAAL,GAAeA,WAAW,EAA1B;AACD,EAAA;;;;uCAEe;AACd,EAAA,UAAI,KAAKJ,IAAL,CAAUY,WAAd,EAA2B;AACzB,EAAA,aAAKZ,IAAL,CAAUY,WAAV;AACA,EAAA,YAAI,KAAKZ,IAAL,CAAUC,OAAV,CAAkBY,SAAlB,CAA4B,eAA5B,EAA6CC,KAA7C,GAAqDC,MAArD,KAAgE,CAApE,EAAuE;AACrE,EAAA,eAAKf,IAAL,CAAUgB,aAAV;AACD,EAAA;AACF,EAAA;AACF,EAAA;;;qCASa;AACZ,EAAA,UAAI,KAAKhB,IAAL,CAAUiB,SAAd,EAAyB;AACvB,EAAA,aAAKjB,IAAL,CAAUiB,SAAV;;AAEA,EAAA,YAAI,KAAKjB,IAAL,CAAUE,SAAV,CAAoBW,SAApB,CAA8B,eAA9B,EAA+CC,KAA/C,GAAuDC,MAAvD,KAAkE,CAAtE,EAAyE;AACvE,EAAA,eAAKf,IAAL,CAAUkB,eAAV;AACD,EAAA;;AAED,EAAA,aAAKlB,IAAL,CAAUmB,UAAV;AACD,EAAA;AACF,EAAA;;;0BAjBe;AAAE,EAAA,aAAO,KAAKR,UAAZ;AAAwB,EAAA;wBAE5BL,WAAU;AACtB,EAAA,WAAKK,UAAL,GAAkBL,SAAlB;AACA,EAAA,UAAI,KAAKN,IAAL,CAAUoB,YAAd,EAA4B,KAAKpB,IAAL,CAAUoB,YAAV;AAC7B,EAAA;;;0BAcO;AAAE,EAAA,aAAO,KAAKX,EAAZ;AAAgB,EAAA;wBACpBd,GAAG;AACP,EAAA,WAAKc,EAAL,GAAUd,CAAV;AACA,EAAA,WAAK0B,cAAL;AACD,EAAA;;;0BAEO;AAAE,EAAA,aAAO,KAAKX,EAAZ;AAAgB,EAAA;wBACpBd,GAAG;AACP,EAAA,WAAKc,EAAL,GAAUd,CAAV;AACA,EAAA,WAAKyB,cAAL;AACD,EAAA;;;0BAEQ;AAAE,EAAA,aAAO,KAAKd,GAAZ;AAAiB,EAAA;wBACrBT,IAAI;AACT,EAAA,WAAKS,GAAL,GAAWT,EAAX;AACA,EAAA,WAAKwB,YAAL;AACD,EAAA;;;0BAEQ;AAAE,EAAA,aAAO,KAAKd,GAAZ;AAAiB,EAAA;wBACrBX,IAAI;AACT,EAAA,WAAKW,GAAL,GAAWX,EAAX;AACA,EAAA,WAAKyB,YAAL;AACD,EAAA;;;0BAEY;AAAE,EAAA,aAAO,EAAE3B,GAAG,KAAKY,GAAV,EAAeX,GAAG,KAAKY,GAAvB,EAAP;AAAoC,EAAA;+BAE9B;AAAA,EAAA,UAARb,CAAQ,SAARA,CAAQ;AAAA,EAAA,UAALC,CAAK,SAALA,CAAK;;AACnB,EAAA,WAAKW,GAAL,GAAWZ,CAAX;AACA,EAAA,WAAKa,GAAL,GAAWZ,CAAX;AACA,EAAA,WAAK0B,YAAL;AACD,EAAA;;;0BAEc;AAAE,EAAA,aAAO,EAAE3B,GAAG,KAAKc,EAAV,EAAcb,GAAG,KAAKc,EAAtB,EAAP;AAAkC,EAAA;+BAE5B;AAAA,EAAA,UAARf,CAAQ,SAARA,CAAQ;AAAA,EAAA,UAALC,CAAK,SAALA,CAAK;;AACrB,EAAA,WAAKa,EAAL,GAAUd,CAAV;AACA,EAAA,WAAKe,EAAL,GAAUd,CAAV;AACA,EAAA,WAAKyB,cAAL;AACD,EAAA;;;0BAEiB;AAChB,EAAA,aAAO;AACP1B,EAAAA,WAAG,KAAKc,EAAL,GAAU,KAAKF,GADX;AAEPX,EAAAA,WAAG,KAAKc,EAAL,GAAU,KAAKF;AAFX,EAAA,OAAP;AAGA,EAAA;;;0BAES;AACT,EAAA,UAAMe,OAAO;AACX5B,EAAAA,WAAG,KAAKc,EADG;AAEXb,EAAAA,WAAG,KAAKc,EAFG;AAGXZ,EAAAA,YAAI,KAAKS,GAHE;AAIXV,EAAAA,YAAI,KAAKW;AAJE,EAAA,OAAb;;AAOA,EAAA,UAAI,KAAKT,IAAL,IAAayB,OAAOC,IAAP,CAAY,KAAK1B,IAAjB,EAAuBgB,MAAvB,GAAgC,CAAjD,EAAoDQ,KAAKxB,IAAL,GAAY,KAAKA,IAAjB;AACpD,EAAA,UAAI,KAAKC,IAAT,EAAeuB,KAAKvB,IAAL,GAAY,KAAKA,IAAjB;AACf,EAAA,UAAI,KAAKW,UAAT,EAAqBY,KAAKjB,SAAL,GAAiB,KAAKK,UAAtB;;AAErB,EAAA,UAAIa,OAAOC,IAAP,CAAY,KAAKvB,SAAjB,EAA4Ba,MAA5B,GAAqC,CAAzC,EAA4CQ,KAAKrB,SAAL,GAAiB,KAAKA,SAAtB;AAC5C,EAAA,UAAIsB,OAAOC,IAAP,CAAY,KAAKxB,OAAjB,EAA0Bc,MAA1B,GAAmC,CAAvC,EAA0CQ,KAAKtB,OAAL,GAAe,KAAKA,OAApB;AAC1C,EAAA,UAAIuB,OAAOC,IAAP,CAAY,KAAKtB,IAAjB,EAAuBY,MAAvB,GAAgC,CAApC,EAAuCQ,KAAKpB,IAAL,GAAY,KAAKA,IAAjB;;AAEvC,EAAA,aAAOoB,IAAP;AACD,EAAA;;;;;MCjHkBG;AAEnB,EAAA,sCAA0D;AAAA,EAAA,QAA5CC,WAA4C,QAA5CA,WAA4C;AAAA,EAAA,QAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,EAAA,QAApBC,gBAAoB,QAApBA,gBAAoB;AAAA,EAAA;;AACxD,EAAA,SAAKD,SAAL,GAAiBA,SAAjB;AACA,EAAA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,EAAA,SAAKF,WAAL,GAAmBA,WAAnB;AACD,EAAA;;;;iCAEUG,aAAa;AACtB,EAAA,WAAKH,WAAL,CAAiBI,OAAjB,CAAyB,aAAK;AAC5BC,EAAAA,UAAEhC,IAAF,GAASiC,SAAT;AACAD,EAAAA,UAAE/B,OAAF,GAAY6B,eAAeA,YAAY7B,OAA3B,IAAsC+B,EAAE/B,OAApD;AACA+B,EAAAA,UAAE9B,SAAF,GAAc4B,eAAeA,YAAY5B,SAA3B,IAAwC8B,EAAE9B,SAAxD;AACA8B,EAAAA,UAAE7B,IAAF,GAAS2B,eAAeA,YAAY3B,IAA3B,IAAmC6B,EAAE7B,IAA9C;AACD,EAAA,OALD;AAMD,EAAA;;;iDAE0B;AAAA,EAAA;;AACzB,EAAA,WAAKwB,WAAL,CAAiBI,OAAjB,CAAyB,aAAK;AAC5BC,EAAAA,UAAEhC,IAAF,CAAOkC,wBAAP,CAAgC,MAAKN,SAArC;AACD,EAAA,OAFD;AAGD,EAAA;;;+BAEQO,WAAU;AAAE,EAAA,WAAKR,WAAL,CAAiBI,OAAjB,CAAyB,aAAK;AAC/C,EAAA,YAAIK,EAAEpC,IAAN,EAAY;AACVoC,EAAAA,YAAEpC,IAAF,CAAOmC,QAAP,GAAkBA,SAAlB;AACAC,EAAAA,YAAEpC,IAAF,CAAOqC,cAAP;AACD,EAAA;AACF,EAAA,OALkB;AAMpB,EAAA;;;oCAEajC,SAAS;AACrB,EAAA,WAAKuB,WAAL,CAAiBI,OAAjB,CAAyB,aAAK;AAC5BK,EAAAA,UAAEhC,OAAF,GAAYA,OAAZ;AACA,EAAA,YAAIgC,EAAEpC,IAAN,EAAW;AACTI,EAAAA,kBAAQ2B,OAAR,CAAgB,aAAK;AACnB,EAAA,gBAAIK,EAAEpC,IAAF,CAAOgC,CAAP,CAAJ,EAAc;AACdI,EAAAA,gBAAEpC,IAAF,CAAOgC,CAAP,EAAUM,MAAV,IAAoBF,EAAEpC,IAAF,CAAOgC,CAAP,EAAUM,MAAV,EAApB;AACAF,EAAAA,gBAAEpC,IAAF,CAAOgC,CAAP,IAAYC,SAAZ;AACC,EAAA;AACF,EAAA,WALD;AAMD,EAAA;AACF,EAAA,OAVD;AAWD,EAAA;;;qCAEcM,UAAU;AACvB,EAAA,WAAKZ,WAAL,CAAiBI,OAAjB,CAAyB,aAAK;AAC5B,EAAA,YAAIK,EAAEpC,IAAF,IAAUoC,EAAEpC,IAAF,CAAOwC,cAArB,EAAoC;AAClCJ,EAAAA,YAAEpC,IAAF,CAAOwC,cAAP,CAAsBD,QAAtB;AACD,EAAA;AACF,EAAA,OAJD;AAKD,EAAA;;;wCAEiBE,aAAa;AAC7B,EAAA,WAAKd,WAAL,CAAiBI,OAAjB,CAAyB,aAAK;AAC5B,EAAA,YAAIK,EAAEpC,IAAN,EAAW;AACToC,EAAAA,YAAEpC,IAAF,CAAOyC,WAAP,GAAqBA,WAArB;AACD,EAAA;AACF,EAAA,OAJD;AAKD,EAAA;;;0BAEU;AAAA,EAAA;;AACT,EAAA,aAAO,KAAKd,WAAL,CAAiBe,GAAjB,CAAqB,aAAK;AAC/B,EAAA,YAAMnB,OAAOa,EAAEb,IAAf;AACA,EAAA,YAAI,OAAKM,gBAAL,IAAyBO,EAAErC,IAA/B,EAAoC;AAClCwB,EAAAA,eAAKxB,IAAL,GAAY,EAAZ;AACAyB,EAAAA,iBAAOC,IAAP,CAAY,OAAKI,gBAAjB,EAAmCE,OAAnC,CAA2C,aAAK;AAC9CR,EAAAA,iBAAKxB,IAAL,CAAU4C,CAAV,IAAe,OAAKd,gBAAL,CAAsBc,CAAtB,EAAyB,EAAEhD,GAAGyC,EAAEzC,CAAP,EAAUC,GAAGwC,EAAExC,CAAf,EAAzB,CAAf;;AAEA,EAAA;AACD,EAAA,WAJD;AAKD,EAAA;AACD,EAAA,eAAO2B,IAAP;AACD,EAAA,OAXM,CAAP;AAYD,EAAA;;;0BAEc;AACb,EAAA,aAAO,KAAKI,WAAL,CAAiBe,GAAjB,CAAqB;AAAA,EAAA,4BAAWN,EAAEpC,IAAF,CAAO4C,iBAAP,EAAX,IAAuCC,WAAWT,EAAEzC,CAApD,EAAuDmD,WAAWV,EAAExC,CAApE;AAAA,EAAA,OAArB,CAAP;AACD,EAAA;;AAED,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;;AAEA,EAAA;AACA,EAAA;AACA,EAAA;;AAEA,EAAA;AACA,EAAA;AACA,EAAA;;;;;;ECvFK,IAAMmD,cAAc,SAAdA,WAAc,OAAoB;AAAA,EAAA,qBAAjBC,EAAiB;AAAA,EAAA,MAAjBA,EAAiB,2BAAd,CAAc;AAAA,EAAA,qBAAXC,EAAW;AAAA,EAAA,MAAXA,EAAW,2BAAR,CAAQ;;AAC7C,EAAA,SAAO,EAAEC,MAAM,EAAEvD,GAAGqD,EAAL,EAASpD,GAAGqD,EAAZ,EAAR,EAAP;AACD,EAAA,CAFM;;AAIP,AAAO,EAAA,IAAME,gBAAgB,SAAhBA,aAAgB,QAAsC;AAAA,EAAA,uBAAnCH,EAAmC;AAAA,EAAA,MAAnCA,EAAmC,4BAAhC,CAAgC;AAAA,EAAA,uBAA7BC,EAA6B;AAAA,EAAA,MAA7BA,EAA6B,4BAAzB,CAAyB;AAAA,EAAA,MAAtBG,EAAsB,SAAtBA,EAAsB;AAAA,EAAA,MAAlBC,EAAkB,SAAlBA,EAAkB;AAAA,EAAA,MAAdC,OAAc,SAAdA,OAAc;;AACjE,EAAA,MAAMC,IAAI,EAAEL,MAAM,EAAEvD,GAAGqD,EAAL,EAASpD,GAAGqD,EAAZ,EAAR,EAAV;;AAEA,EAAA,MAAIG,OAAOnB,SAAX,EAAsB;AACpBsB,EAAAA,MAAEH,EAAF,GAAO,EAAEzD,GAAGqD,KAAKI,KAAGI,KAAKC,IAAL,CAAU,CAAV,CAAb,EAA2B7D,GAAGqD,KAAKG,KAAGI,KAAKC,IAAL,CAAU,CAAV,CAAtC,EAAP;AACD,EAAA;;AAED,EAAA,MAAIJ,OAAOpB,SAAX,EAAsB;AACpBsB,EAAAA,MAAEF,EAAF,GAAO,EAAE1D,GAAGqD,KAAKK,KAAGG,KAAKC,IAAL,CAAU,CAAV,CAAb,EAA2B7D,GAAGqD,KAAKI,KAAGG,KAAKC,IAAL,CAAU,CAAV,CAAtC,EAAP;AACD,EAAA;;AAED,EAAA,MAAIH,YAAYrB,SAAhB,EAA2B;AACzBsB,EAAAA,MAAED,OAAF,GAAY,EAAE3D,GAAGqD,KAAKI,EAAL,GAAUE,OAAf,EAAwB1D,GAAGqD,EAA3B,EAAZ;AACD,EAAA;;AAED,EAAA,SAAOM,CAAP;AACD,EAAA,CAhBM;;AAkBP,AAqBA,AAgBA,EAAA;AACA,AAAO,EAAA,IAAMG,aAAa,SAAbA,UAAa,QAA6B;AAAA,EAAA,MAA1BC,KAA0B,SAA1BA,KAA0B;AAAA,EAAA,MAAnBC,OAAmB,SAAnBA,OAAmB;AAAA,EAAA,sBAAVC,CAAU;AAAA,EAAA,MAAVA,CAAU,2BAAR,EAAQ;;AACpD,EAAA;AACA,EAAA;AACA,EAAA,MAAMN,IAAII,MAAM9C,SAAN,CAAgB,eAAhB,EACRd,IADQ,CACH6D,OADG,CAAV;;AAGDL,EAAAA,IAAEO,KAAF,GACGC,MADH,CACU,QADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,QAFjB,EAGGC,IAHH,CAGQC,cACHC,SADG,CACOC,mBAAO,eAAP,EAAwBC,IAAxB,EADP,EAEHC,EAFG,CAEA,OAFA,EAES;AAAA,EAAA,WAAKtC,EAAEuC,KAAF,IAAWvC,EAAEuC,KAAF,CAAQvC,CAAR,CAAhB;AAAA,EAAA,GAFT,EAGHsC,EAHG,CAGA,MAHA,EAGQ;AAAA,EAAA,WAAKtC,EAAEkC,IAAF,IAAUlC,EAAEkC,IAAF,CAAOlC,CAAP,CAAf;AAAA,EAAA,GAHR,EAIHsC,EAJG,CAIA,KAJA,EAIO;AAAA,EAAA,WAAKtC,EAAEwC,GAAF,IAASxC,EAAEwC,GAAF,CAAMxC,CAAN,CAAd;AAAA,EAAA,GAJP,CAHR;;AAUA2B,EAAAA,QAAM9C,SAAN,CAAgB,eAAhB,EACGmD,IADH,CACQ,IADR,EACc;AAAA,EAAA,WAAKhC,EAAErC,CAAP;AAAA,EAAA,GADd,EAEGqE,IAFH,CAEQ,IAFR,EAEc;AAAA,EAAA,WAAKhC,EAAEpC,CAAP;AAAA,EAAA,GAFd,EAGGoE,IAHH,CAGQ,GAHR,EAGa;AAAA,EAAA,WAAKhC,EAAE6B,CAAF,IAAOA,CAAZ;AAAA,EAAA,GAHb,EAIGG,IAJH,CAIQ,OAJR,EAIiB;AAAA,EAAA,wBAAehC,EAAE1B,SAAF,IAAe,EAA9B;AAAA,EAAA,GAJjB;;AAMAiD,EAAAA,IAAEkB,IAAF,GACGnC,MADH;AAGD,EAAA,CAzBM;;EC/DA,IAAMoC,mBAAmB,SAAnBA,gBAAmB,CAACC,KAAD,EAAQ/E,CAAR,EAAc;AAC5C,EAAA,MAAI+E,SAAS,SAAT,IAAsBA,SAAS,MAA/B,IAAyCA,SAAS,OAAtD,EAA8D;AAC1D,EAAA,QAAI/E,IAAI,CAAR,EAAU;AAAE+E,EAAAA,cAAQ,KAAR;AAAe,EAAA,KAA3B,MACK;AAAEA,EAAAA,cAAQ,QAAR;AAAkB,EAAA;AAC5B,EAAA;AACD,EAAA,SAAOA,KAAP;AACD,EAAA,CANM;;AAQP,AAAO,EAAA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACD,KAAD,EAAQhF,CAAR,EAAc;AAC5C,EAAA,MAAIgF,SAAS,SAAT,IAAsBA,SAAS,KAA/B,IAAwCA,SAAS,QAArD,EAA8D;AAC5D,EAAA,QAAIhF,IAAI,CAAR,EAAU;AAAEgF,EAAAA,cAAQ,OAAR;AAAiB,EAAA,KAA7B,MACK;AAAEA,EAAAA,cAAQ,MAAR;AAAgB,EAAA;AACxB,EAAA;AACD,EAAA,SAAOA,KAAP;AACD,EAAA,CANM;;AASP,uBAAe,gBAAmD;AAAA,EAAA,MAAhDrB,OAAgD,QAAhDA,OAAgD;AAAA,EAAA,MAAvCuB,IAAuC,QAAvCA,IAAuC;AAAA,EAAA,MAAjCF,KAAiC,QAAjCA,KAAiC;AAAA,EAAA,MAA1BG,WAA0B,QAA1BA,WAA0B;AAAA,EAAA,MAAbC,MAAa,QAAbA,MAAa;;AAC9D,EAAA,MAAIpF,IAAI,CAACkF,KAAKlF,CAAd;AACA,EAAA,MAAIC,IAAI,CAACiF,KAAKjF,CAAd;;AAED,EAAA,MAAKkF,gBAAgB,WAArB,EAAkC;AAC/BH,EAAAA,YAAQC,iBAAiBD,KAAjB,EAAwBI,OAAOpF,CAA/B,CAAR;AACA,EAAA,QAAIoF,OAAOnF,CAAP,GAAW,CAAf,EAAiB;AACfA,EAAAA,WAAMiF,KAAKG,MAAL,GAAc1B,OAApB;AACF,EAAA,KAFA,MAEM;AACL1D,EAAAA,WAAK0D,OAAL;AACD,EAAA;;AAEA,EAAA,QAAKqB,UAAU,QAAf,EAA0B;AACxBhF,EAAAA,WAAKkF,KAAKI,KAAL,GAAW,CAAhB;AACD,EAAA,KAFD,MAEO,IAAIN,UAAU,OAAd,EAAwB;AAC7BhF,EAAAA,WAAMkF,KAAKI,KAAX;AACD,EAAA;AAEF,EAAA,GAdF,MAcQ,IAAKH,gBAAgB,WAArB,EAAkC;AACvCH,EAAAA,YAAQD,iBAAiBC,KAAjB,EAAwBI,OAAOnF,CAA/B,CAAR;AACA,EAAA,QAAImF,OAAOpF,CAAP,GAAW,CAAf,EAAiB;AACfA,EAAAA,WAAMkF,KAAKI,KAAL,GAAa3B,OAAnB;AACD,EAAA,KAFD,MAEO;AACL3D,EAAAA,WAAK2D,OAAL;AACD,EAAA;;AAEA,EAAA,QAAKqB,UAAU,QAAf,EAA0B;AACvB/E,EAAAA,WAAKiF,KAAKG,MAAL,GAAY,CAAjB;AACF,EAAA,KAFD,MAEO,IAAIL,UAAU,KAAd,EAAqB;AACzB/E,EAAAA,WAAMiF,KAAKG,MAAX;AACF,EAAA;AACH,EAAA;;AAED,EAAA,SAAO,EAAErF,IAAF,EAAKC,IAAL,EAAP;AACH,EAAA,CAlCD;;EChBO,IAAMsF,cAAc,SAAdA,WAAc,OAA2D;AAAA,EAAA,MAAxDnF,IAAwD,QAAxDA,IAAwD;AAAA,EAAA,wBAAlDoF,KAAkD;AAAA,EAAA,MAAlDA,KAAkD,8BAA5CC,mBAA4C;AAAA,EAAA,MAA/BC,aAA+B,QAA/BA,aAA+B;AAAA,EAAA,MAAhB/E,SAAgB,QAAhBA,SAAgB;;AACpF,EAAA,MAAMgF,UAAUC,eACbJ,KADa,CACPA,KADO,CAAhB;;AAGA,EAAA,MAAMK,UAAU;AACdxF,EAAAA,UAAM,MADQ;AAEdM,EAAAA,wBAFc;AAGdP,EAAAA;AAHc,EAAA,GAAhB;;AAMA,EAAA,MAAIsF,aAAJ,EAAmB;AACjBC,EAAAA,YAAQG,OAAR,CAAgBJ,aAAhB;AACAG,EAAAA,YAAQE,WAAR,GAAsBJ,OAAtB;AAED,EAAA,GAJD,MAIO;AACLE,EAAAA,YAAQG,KAAR,GAAgB;AACd3D,EAAAA,SAAGsD,QAAQvF,IAAR;AADW,EAAA,KAAhB;AAGD,EAAA;;AAED,EAAA,SAAOyF,OAAP;AACD,EAAA,CArBM;;AAuBP,AAAO,EAAA,IAAMI,aAAa,SAAbA,UAAa,QAAwC;AAAA,EAAA,MAArC7F,IAAqC,SAArCA,IAAqC;AAAA,EAAA,MAA/BsF,aAA+B,SAA/BA,aAA+B;AAAA,EAAA,MAAhB/E,SAAgB,SAAhBA,SAAgB;;;AAEhE,EAAA,MAAMkF,UAAU;AACdxF,EAAAA,UAAM,MADQ;AAEdM,EAAAA,wBAFc;AAGdP,EAAAA;AAHc,EAAA,GAAhB;;AAMA,EAAA,MAAM8F,WAAWC,cACdC,WADc,CACFhG,KAAKgG,WAAL,IAAoB,CADlB,EAEdC,WAFc,CAEFjG,KAAKiG,WAAL,IAAoBjG,KAAKkG,MAAzB,IAAmC,CAFjC,EAGdC,UAHc,CAGHnG,KAAKmG,UAAL,IAAmB,CAHhB,EAIdC,QAJc,CAILpG,KAAKoG,QAAL,IAAiB,IAAE3C,KAAK4C,EAJnB,CAAjB;;AAMA,EAAA,MAAIf,aAAJ,EAAmB;AACjBQ,EAAAA,aAASJ,OAAT,CAAiBJ,aAAjB;AACAG,EAAAA,YAAQE,WAAR,GAAsBJ,OAAtB;AAED,EAAA,GAJD,MAIO;;AAELE,EAAAA,YAAQG,KAAR,GAAgB;AACd3D,EAAAA,SAAG6D;AADW,EAAA,KAAhB;AAGD,EAAA;;AAED,EAAA,SAAOL,OAAP;AACD,EAAA,CA1BM;;ACtBP,sBAAe,gBAAgD;AAAA,EAAA,MAA7Cb,KAA6C,QAA7CA,KAA6C;AAAA,EAAA,oBAAtChF,CAAsC;AAAA,EAAA,MAAtCA,CAAsC,0BAApC,CAAoC;AAAA,EAAA,oBAAjCC,CAAiC;AAAA,EAAA,MAAjCA,CAAiC,0BAA/B,CAA+B;AAAA,EAAA,MAA5BiF,IAA4B,QAA5BA,IAA4B;AAAA,EAAA,MAAtBE,MAAsB,QAAtBA,MAAsB;AAAA,EAAA,MAAdzB,OAAc,QAAdA,OAAc;;AAC7DqB,EAAAA,UAAQD,iBAAiBC,KAAjB,EAAwBI,OAAOnF,CAA/B,CAAR;;AAEA,EAAA,MAAI+E,SAAS,KAAb,EAAoB;AAAE/E,EAAAA,SAAKiF,KAAKG,MAAV;AAAkB,EAAA,GAAxC,MACK,IAAIL,SAAS,QAAb,EAAsB;AAAE/E,EAAAA,SAAKiF,KAAKG,MAAL,GAAY,CAAjB;AAAoB,EAAA;;AAEjD,EAAA,MAAMjF,OAAO,CAAC,CAACJ,CAAD,EAAIC,CAAJ,CAAD,EAAS,CAACD,CAAD,EAAIC,IAAIiF,KAAKG,MAAb,CAAT,CAAb;AACA,EAAA,SAAO,EAAEqB,YAAY,CAACnB,YAAY,EAAEnF,UAAF,EAAQO,WAAY,WAApB,EAAZ,CAAD,CAAd,EAAP;AACD,EAAA,CARD;;ACAA,wBAAe,gBAAgD;AAAA,EAAA,MAA7CqE,KAA6C,QAA7CA,KAA6C;AAAA,EAAA,oBAAtChF,CAAsC;AAAA,EAAA,MAAtCA,CAAsC,0BAApC,CAAoC;AAAA,EAAA,oBAAjCC,CAAiC;AAAA,EAAA,MAAjCA,CAAiC,0BAA/B,CAA+B;AAAA,EAAA,MAA5BmF,MAA4B,QAA5BA,MAA4B;AAAA,EAAA,MAApBF,IAAoB,QAApBA,IAAoB;AAAA,EAAA,MAAdvB,OAAc,QAAdA,OAAc;;AAC7DqB,EAAAA,UAAQC,iBAAiBD,KAAjB,EAAwBI,OAAOpF,CAA/B,CAAR;;AAEA,EAAA,MAAIgF,SAAS,OAAb,EAAsB;AAAEhF,EAAAA,SAAKkF,KAAKI,KAAV;AAAiB,EAAA,GAAzC,MACK,IAAIN,SAAS,QAAb,EAAsB;AAAEhF,EAAAA,SAAKkF,KAAKI,KAAL,GAAW,CAAhB;AAAmB,EAAA;;AAEhD,EAAA,MAAMlF,OAAO,CAAC,CAACJ,CAAD,EAAIC,CAAJ,CAAD,EAAS,CAACD,IAAIkF,KAAKI,KAAV,EAAiBrF,CAAjB,CAAT,CAAb;AACA,EAAA,SAAO,EAAEyG,YAAY,CAACnB,YAAY,EAAEnF,UAAF,EAAQO,WAAY,WAApB,EAAZ,CAAD,CAAd,EAAP;AACD,EAAA,CARD;;ECDO,IAAMgG,YAAY,SAAZA,SAAY,OAA2B;AAAA,EAAA,MAAxBtG,IAAwB,QAAxBA,IAAwB;AAAA,EAAA,MAAlBuG,WAAkB,QAAlBA,WAAkB;;AAClD,EAAA,MAAIC,aAAaxG,KAAKwG,UAAtB;AACA,EAAA,MAAIzB,SAASyB,WAAWC,QAAxB;;AAEA,EAAA,MAAIC,KAAKF,WAAW7G,CAAX,GAAeoF,OAAOpF,CAA/B;AAAA,EAAA,MACEgH,KAAKD,KAAKF,WAAW1G,EADvB;AAAA,EAAA,MAEE8G,KAAKJ,WAAW5G,CAAX,GAAemF,OAAOnF,CAF7B;AAAA,EAAA,MAGEiH,KAAKD,KAAKJ,WAAW3G,EAHvB;;AAMD,EAAA,MAAMiH,cAAcN,WAAWvG,OAA/B;;AAEC,EAAA,MAAIsG,eAAe,QAAf,KAA4BO,YAAYd,WAAZ,IAA2Bc,YAAYb,MAAnE,CAAJ,EAA+E;AAC7E,EAAA,QAAM1C,IAAKC,KAAKC,IAAL,CAAU,CAACiD,KAAKC,EAAN,KAAWD,KAAKC,EAAhB,IAAsB,CAACC,KAAKC,EAAN,KAAWD,KAAKC,EAAhB,CAAhC,CAAX;AACA,EAAA,QAAME,QAAQvD,KAAKwD,IAAL,CAAU,CAACH,EAAD,GAAItD,CAAd,CAAd;AACA,EAAA,QAAMM,IAAIiD,YAAYd,WAAZ,IAA2Bc,YAAYb,MAAZ,IAAsBa,YAAYG,aAAZ,IAA6B,CAAnD,CAArC;;AAEAP,EAAAA,SAAKlD,KAAK0D,GAAL,CAAS1D,KAAK2D,GAAL,CAASJ,KAAT,IAAgBlD,CAAzB,KAA6B8C,KAAK,CAAL,GAAS,CAAC,CAAV,GAAc,CAA3C,CAAL;AACAC,EAAAA,SAAKpD,KAAK0D,GAAL,CAAS1D,KAAK4D,GAAL,CAASL,KAAT,IAAgBlD,CAAzB,KAA6BgD,KAAK,CAAL,GAAS,CAAC,CAAV,GAAc,CAA3C,CAAL;AAED,EAAA;;AAED,EAAA,MAAIN,eAAe,MAAnB,EAA0B;AAAA,EAAA,QACdtB,KADc,GACI6B,WADJ,CACd7B,KADc;AAAA,EAAA,QACPD,MADO,GACI8B,WADJ,CACP9B,MADO;;;AAGtB,EAAA,QAAKC,QAAQ,CAAR,IAAauB,WAAW1G,EAAX,GAAgB,CAA9B,IAAqCmF,QAAQ,CAAR,IAAauB,WAAW1G,EAAX,GAAgB,CAAtE,EAA0E;AACtE,EAAA,UAAI0D,KAAK0D,GAAL,CAASjC,KAAT,IAAkBzB,KAAK0D,GAAL,CAASV,WAAW1G,EAApB,CAAtB,EAA+C4G,KAAKzB,QAAM,CAAX,CAA/C,KACKyB,KAAKzB,KAAL;AACR,EAAA;AACD,EAAA,QAAKD,SAAS,CAAT,IAAcwB,WAAW3G,EAAX,GAAgB,CAA/B,IAAsCmF,SAAS,CAAT,IAAcwB,WAAW3G,EAAX,GAAgB,CAAxE,EAA4E;AACxE,EAAA,UAAI2D,KAAK0D,GAAL,CAASlC,MAAT,IAAmBxB,KAAK0D,GAAL,CAASV,WAAW3G,EAApB,CAAvB,EAAgD+G,KAAK5B,SAAO,CAAZ,CAAhD,KACK4B,KAAK5B,MAAL;AACR,EAAA;AACD,EAAA,QAAI0B,MAAMzB,QAAM,CAAZ,IAAiB2B,MAAM5B,SAAO,CAAlC,EAAoC;AAAE0B,EAAAA,WAAKC,EAAL,CAASC,KAAKC,EAAL;AAAS,EAAA;AACzD,EAAA;;AAGH,EAAA,SAAO,CAAC,CAACH,EAAD,EAAKE,EAAL,CAAD,EAAW,CAACD,EAAD,EAAKE,EAAL,CAAX,CAAP;AACD,EAAA,CAtCM;;AAwCP,uBAAe,UAACQ,aAAD,EAAmB;AAChC,EAAA,MAAMtH,OAAOuG,UAAUe,aAAV,CAAb;AACA,EAAA,SAAO,EAAEhB,YAAY,CAACnB,YAAY,EAAEnF,UAAF,EAAQO,WAAY,WAApB,EAAZ,CAAD,CAAd,EAAP;AACD,EAAA,CAHD;;ACxCA,wBAAe,gBAA2B;AAAA,EAAA,MAAxBN,IAAwB,QAAxBA,IAAwB;AAAA,EAAA,MAAlBuG,WAAkB,QAAlBA,WAAkB;;;AAEtC,EAAA,MAAMC,aAAaxG,KAAKwG,UAAxB;AACA,EAAA,MAAMzB,SAASyB,WAAWC,QAA1B;;AAEA,EAAA,MAAIC,KAAKF,WAAW7G,CAAX,GAAeoF,OAAOpF,CAA/B;AAAA,EAAA,MACAgH,KAAKD,KAAKF,WAAW1G,EADrB;AAAA,EAAA,MAEA8G,KAAKJ,WAAW5G,CAAX,GAAemF,OAAOnF,CAF3B;AAAA,EAAA,MAGAiH,KAAKD,KAAKJ,WAAW3G,EAHrB;;AAKA,EAAA,MAAMiH,cAAcN,WAAWvG,OAA/B;;AAEA,EAAA,MAAIsG,eAAe,MAAnB,EAA0B;AAAA,EAAA,QAChBtB,KADgB,GACE6B,WADF,CAChB7B,KADgB;AAAA,EAAA,QACTD,MADS,GACE8B,WADF,CACT9B,MADS;;;AAGxB,EAAA,QAAKC,QAAQ,CAAR,IAAauB,WAAW1G,EAAX,GAAgB,CAA9B,IAAqCmF,QAAQ,CAAR,IAAauB,WAAW1G,EAAX,GAAgB,CAAtE,EAA0E;AACtE,EAAA,UAAI0D,KAAK0D,GAAL,CAASjC,KAAT,IAAkBzB,KAAK0D,GAAL,CAASV,WAAW1G,EAApB,CAAtB,EAA+C4G,KAAKzB,QAAM,CAAX,CAA/C,KACKyB,KAAKzB,KAAL;AACR,EAAA;AACD,EAAA,QAAKD,SAAS,CAAT,IAAcwB,WAAW3G,EAAX,GAAgB,CAA/B,IAAsCmF,SAAS,CAAT,IAAcwB,WAAW3G,EAAX,GAAgB,CAAxE,EAA4E;AACxE,EAAA,UAAI2D,KAAK0D,GAAL,CAASlC,MAAT,IAAmBxB,KAAK0D,GAAL,CAASV,WAAW3G,EAApB,CAAvB,EAAgD+G,KAAK5B,SAAO,CAAZ,CAAhD,KACK4B,KAAK5B,MAAL;AACR,EAAA;AACD,EAAA,QAAI0B,MAAMzB,QAAM,CAAZ,IAAiB2B,MAAM5B,SAAO,CAAlC,EAAoC;AAAE0B,EAAAA,WAAKC,EAAL,CAASC,KAAKC,EAAL;AAAS,EAAA;AACzD,EAAA;;AAED,EAAA,MAAI9G,OAAO,CAAC,CAAC2G,EAAD,EAAKE,EAAL,CAAD,EAAW,CAACD,EAAD,EAAKE,EAAL,CAAX,CAAX;;AAEA,EAAA,MAAIS,QAAST,KAAKD,EAAlB;AACA,EAAA,MAAIW,QAASZ,KAAKD,EAAlB;AACA,EAAA,MAAIc,KAAKb,EAAT;AACA,EAAA,MAAIc,KAAKZ,EAAT;AACA,EAAA,MAAIa,WAAYb,KAAKD,EAAL,IAAWD,KAAKD,EAAhB,IAAsBC,KAAKD,EAAL,IAAWG,KAAKD,EAAvC,GAA4C,CAAC,CAA7C,GAAiD,CAAhE;;AAEA,EAAA,MAAIpD,KAAK0D,GAAL,CAASK,KAAT,IAAkB/D,KAAK0D,GAAL,CAASI,KAAT,CAAtB,EAAsC;AACpCE,EAAAA,SAAKb,EAAL;AACAc,EAAAA,SAAKb,KAAKW,QAAMG,QAAhB;AACD,EAAA,GAHD,MAGO;AACLD,EAAAA,SAAKZ,EAAL;AACAW,EAAAA,SAAKd,KAAKY,QAAMI,QAAhB;AACD,EAAA;;AAED,EAAA,MAAInB,eAAe,QAAf,KAA4BO,YAAYd,WAAZ,IAA2Bc,YAAYb,MAAnE,CAAJ,EAA+E;AAC7E,EAAA,QAAMpC,IAAI,CAACiD,YAAYd,WAAZ,IAA2Bc,YAAYb,MAAxC,KAAmDa,YAAYG,aAAZ,IAA6B,CAAhF,CAAV;AACA,EAAA,QAAMlG,SAAS8C,IAAEL,KAAKC,IAAL,CAAU,CAAV,CAAjB;;AAEA,EAAA,QAAID,KAAK0D,GAAL,CAASK,KAAT,IAAkBxG,MAAlB,IAA4ByC,KAAK0D,GAAL,CAASI,KAAT,IAAkBvG,MAAlD,EAAyD;AACvD2F,EAAAA,WAAK3F,UAAQ4F,KAAK,CAAL,GAAS,CAAC,CAAV,GAAc,CAAtB,CAAL;AACAC,EAAAA,WAAK7F,UAAQ8F,KAAK,CAAL,GAAS,CAAC,CAAV,GAAc,CAAtB,CAAL;AACA9G,EAAAA,aAAO,CAAC,CAAC2G,EAAD,EAAKE,EAAL,CAAD,EAAW,CAACY,EAAD,EAAMC,EAAN,CAAX,EAAuB,CAACd,EAAD,EAAKE,EAAL,CAAvB,CAAP;AAED,EAAA,KALD,MAKO,IAAIrD,KAAK0D,GAAL,CAASK,KAAT,IAAkB/D,KAAK0D,GAAL,CAASI,KAAT,CAAtB,EAAsC;AAC3C,EAAA,UAAMP,QAAQvD,KAAKwD,IAAL,CAAU,CAACH,EAAD,GAAIhD,CAAd,CAAd;AACA6C,EAAAA,WAAKlD,KAAK0D,GAAL,CAAS1D,KAAK2D,GAAL,CAASJ,KAAT,IAAgBlD,CAAzB,KAA6B8C,KAAK,CAAL,GAAS,CAAC,CAAV,GAAc,CAA3C,CAAL;AACA5G,EAAAA,aAAO,CAAC,CAAE2G,EAAF,EAAMG,EAAN,CAAD,EAAY,CAACF,EAAD,EAAKE,EAAL,CAAZ,CAAP;AACD,EAAA,KAJM,MAIA;AACL,EAAA,UAAME,SAAQvD,KAAKmE,IAAL,CAAUhB,KAAG9C,CAAb,CAAd;AACA+C,EAAAA,WAAKpD,KAAK0D,GAAL,CAAS1D,KAAK4D,GAAL,CAASL,MAAT,IAAgBlD,CAAzB,KAA6BgD,KAAK,CAAL,GAAS,CAAC,CAAV,GAAc,CAA3C,CAAL;AACA9G,EAAAA,aAAO,CAAC,CAAE4G,EAAF,EAAMC,EAAN,CAAD,EAAY,CAACD,EAAD,EAAKE,EAAL,CAAZ,CAAP;AACD,EAAA;AACF,EAAA,GAlBD,MAkBO;AACL9G,EAAAA,WAAO,CAAC,CAAC2G,EAAD,EAAKE,EAAL,CAAD,EAAW,CAACY,EAAD,EAAMC,EAAN,CAAX,EAAsB,CAACd,EAAD,EAAKE,EAAL,CAAtB,CAAP;AACD,EAAA;;AAED,EAAA,SAAO,EAAER,YAAY,CAACnB,YAAY,EAAEnF,UAAF,EAAQO,WAAW,WAAnB,EAAZ,CAAD,CAAd,EAAP;AACH,EAAA,CAjED;;ACIA,wBAAe,gBAA0C;AAAA,EAAA,MAAvCN,IAAuC,QAAvCA,IAAuC;AAAA,EAAA,MAAjCqH,aAAiC,QAAjCA,aAAiC;AAAA,EAAA,MAAlBd,WAAkB,QAAlBA,WAAkB;;;AAEvD,EAAA,MAAI,CAACc,aAAL,EAAmB;AAAEA,EAAAA,oBAAgB,EAAhB;AAAoB,EAAA;AACzC,EAAA,MAAI,CAACA,cAAcO,MAAf,IAAyB,OAAOP,cAAcO,MAArB,KAAgC,QAA7D,EAAsE;AACpEP,EAAAA,kBAAcO,MAAd,GAAuBC,aAAa7H,KAAKwG,UAAL,CAAgBzB,MAA7B,EAAqCsC,cAAcO,MAAnD,CAAvB;AACD,EAAA;AACD,EAAA,MAAI,CAACP,cAAclC,KAAnB,EAAyB;AAAEkC,EAAAA,kBAAclC,KAAd,GAAsB2C,uBAAtB;AAAuC,EAAA;;AAElE,EAAA,MAAIlE,UAAU,EAAd;;AAEA,EAAA,MAAI5D,KAAKmC,QAAT,EAAmB;AAAA,EAAA;AACjB,EAAA,UAAM4F,WAAWV,cAAcO,MAAd,CACdlF,GADc,CACV,UAACsF,CAAD,EAAGC,CAAH;AAAA,EAAA,4BAAclF,YAAY,EAACC,IAAIgF,EAAE,CAAF,CAAL,EAAW/E,IAAI+E,EAAE,CAAF,CAAf,EAAZ,CAAd,IAAiDE,OAAOD,CAAxD;AAAA,EAAA,OADU,CAAjB;;AAGA,EAAA,UAAME,cAAc,SAAdA,WAAc,CAACD,KAAD,EAAW;AAC3Bb,EAAAA,sBAAcO,MAAd,CAAqBM,KAArB,EAA4B,CAA5B,KAAkCE,kBAAMtI,EAAxC;AACAuH,EAAAA,sBAAcO,MAAd,CAAqBM,KAArB,EAA4B,CAA5B,KAAkCE,kBAAMvI,EAAxC;AACAG,EAAAA,aAAKkB,eAAL;AACH,EAAA,OAJD;;AAMA0C,EAAAA,gBAAU5D,KAAKqI,UAAL,CAAgBN,SACvBrF,GADuB,CACnB;AAAA,EAAA,4BAAWa,EAAEL,IAAb,IAAmBgB,MAAMiE,YAAYG,IAAZ,CAAiBtI,IAAjB,EAAuBuD,EAAE2E,KAAzB,CAAzB;AAAA,EAAA,OADmB,CAAhB,CAAV;AAViB,EAAA;AAalB,EAAA;;AAED,EAAA,MAAInI,OAAOuG,UAAU,EAAEtG,UAAF,EAAQuG,wBAAR,EAAV,CAAX;AACAxG,EAAAA,UAAQA,KAAK,CAAL,CAAR,2BAAoBsH,cAAcO,MAAlC,IAA0C7H,KAAK,CAAL,CAA1C;AACA,EAAA,MAAMsG,aAAa,CAACnB,YAAY,EAAEnF,UAAF,EAAQoF,OAAOkC,cAAclC,KAA7B,EAAoC7E,WAAW,WAA/C,EAAZ,CAAD,CAAnB;;AAEA,EAAA,SAAO,EAAE+F,sBAAF,EAAezC,gBAAf,EAAP;AACD,EAAA,CA9BD;;AAgCA,EAAA,IAAMiE,eAAe,SAAfA,YAAe,CAAU9C,MAAV,EAA4B;AAAA,EAAA,MAAVwD,OAAU,uEAAF,CAAE;;AAC/C,EAAA,MAAMC,OAAO,EAAE7I,GAAGoF,OAAOpF,CAAP,IAAU4I,UAAU,CAApB,CAAL,EAA6B3I,GAAGmF,OAAOnF,CAAP,IAAU2I,UAAU,CAApB,CAAhC,EAAb;AACA,EAAA,MAAME,IAAI,EAAV;;AAEA,EAAA,MAAIR,IAAI,CAAR;AACA,EAAA,SAAOA,KAAKM,OAAZ,EAAqBN,GAArB,EAAyB;AACvBQ,EAAAA,MAAEC,IAAF,CAAO,CAACF,KAAK7I,CAAL,GAAOsI,CAAP,GAAWA,IAAE,CAAF,GAAI,EAAhB,EAAoBO,KAAK5I,CAAL,GAAOqI,CAAP,GAAWA,IAAE,CAAF,GAAI,EAAnC,CAAP;AACD,EAAA;AACD,EAAA,SAAOQ,CAAP;AACD,EAAA,CATD;;ACpCA,wBAAe,gBAAgC;AAAA,EAAA,MAA7BjC,UAA6B,QAA7BA,UAA6B;AAAA,EAAA,MAAjBjC,KAAiB,QAAjBA,KAAiB;AAAA,EAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC7C,EAAA,MAAMO,SAASyB,WAAWC,QAA1B;AACA,EAAA,MAAI,CAAClC,KAAL,EAAY;AAAEA,EAAAA,YAAQ,CAACiC,WAAW1G,EAAZ,EAAgB0G,WAAW3G,EAA3B,CAAR;AAAuC,EAAA,GAArD,MACK;AAAE0E,EAAAA,YAAQ,CAAC,CAACC,IAAI,CAAJ,CAAD,GAAUD,MAAM,CAAN,CAAX,EAAqB,CAAEC,IAAI,CAAJ,CAAF,GAAWD,MAAM,CAAN,CAAhC,CAAR;AAAkD,EAAA;AACzD,EAAA,MAAI,CAACC,GAAL,EAAU;AAAEA,EAAAA,UAAM,CAACgC,WAAW7G,CAAX,GAAeoF,OAAOpF,CAAvB,EAA0B6G,WAAW5G,CAAX,GAAemF,OAAOnF,CAAhD,CAAN;AAAyD,EAAA;;AAErE,EAAA,MAAI8G,KAAKlC,IAAI,CAAJ,CAAT;AAAA,EAAA,MACEoC,KAAKpC,IAAI,CAAJ,CADP;;AAGA,EAAA,MAAI1E,KAAKyE,MAAM,CAAN,CAAT;AACA,EAAA,MAAI1E,KAAK0E,MAAM,CAAN,CAAT;;AAEA,EAAA,MAAIoE,OAAO,EAAX;AACA,EAAA,MAAIC,cAAc,KAAG,GAAH,GAAOpF,KAAK4C,EAA9B;AACA,EAAA,MAAIW,QAAQvD,KAAKqF,IAAL,CAAUhJ,KAAGC,EAAb,CAAZ;;AAEA,EAAA,MAAIA,KAAK,CAAT,EAAa;AACXiH,EAAAA,aAASvD,KAAK4C,EAAd;AACD,EAAA;;AAED,EAAA,MAAMrG,OAAO,CAAC,CAAC2G,EAAD,EAAKE,EAAL,CAAD,EACX,CAACpD,KAAK2D,GAAL,CAASJ,QAAQ6B,WAAjB,IAA8BD,IAA9B,GAAqCjC,EAAtC,EAA0ClD,KAAK4D,GAAL,CAASL,QAAQ6B,WAAjB,IAA8BD,IAA9B,GAAqC/B,EAA/E,CADW,EAEX,CAACpD,KAAK2D,GAAL,CAASJ,QAAQ6B,WAAjB,IAA8BD,IAA9B,GAAqCjC,EAAtC,EAA0ClD,KAAK4D,GAAL,CAASL,QAAQ6B,WAAjB,IAA8BD,IAA9B,GAAqC/B,EAA/E,CAFW,EAGX,CAACF,EAAD,EAAKE,EAAL,CAHW,CAAb;;AAKA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;AACA,EAAA;;AAEA,EAAA,SAAO,EAAEP,YAAY,CAACnB,YAAY,EAAEnF,UAAF,EAAQO,WAAY,iBAApB,EAAZ,CAAD,CAAd,EAAP;AACD,EAAA,CAzCD;;ACAA,sBAAe,gBAAc;AAAA,EAAA,MAAXiF,IAAW,QAAXA,IAAW;;;AAE3B,EAAA,MAAIuD,MAAMlD,WAAW,EAAEtF,WAAW,eAAb,EAA8BP,MAAM,EAAEkG,QAAQ,CAAV,EAApC,EAAX,CAAV;AACA6C,EAAAA,MAAInD,KAAJ,CAAUoD,SAAV,kBAAmCxD,KAAKxF,IAAL,CAAU,CAAV,EAAa,CAAb,CAAnC,UAAuDwF,KAAKxF,IAAL,CAAU,CAAV,EAAa,CAAb,CAAvD;;AAEA,EAAA,SAAO,EAAEsG,YAAY,CAACyC,GAAD,CAAd,EAAP;AACD,EAAA,CAND;;ACEA,uBAAe,gBAA0B;AAAA,EAAA,MAAvBhC,WAAuB,QAAvBA,WAAuB;AAAA,EAAA,MAAV9G,IAAU,QAAVA,IAAU;;AACrC,EAAA,MAAI,CAAC8G,YAAYb,MAAb,IAAuB,CAACa,YAAYd,WAAxC,EAAqD;AAAEc,EAAAA,gBAAYb,MAAZ,GAAqB,EAArB;AAAyB,EAAA;;AAEhF,EAAA,MAAIrC,UAAU,EAAd;AACA,EAAA,MAAMoE,IAAIpC,WAAW,EAAE7F,MAAM+G,WAAR,EAAqBxG,WAAW,SAAhC,EAAX,CAAV;AACA,EAAA,MAAIN,KAAKmC,QAAT,EAAkB;AAChB,EAAA,QAAMoB,IAAIJ,cAAc;AACtBC,EAAAA,UAAI4E,EAAEjI,IAAF,CAAOiG,WAAP,IAAsBgC,EAAEjI,IAAF,CAAOkG,MADX;AAEtB5C,EAAAA,UAAI2E,EAAEjI,IAAF,CAAOgG,WAFW;AAGtBzC,EAAAA,eAASwD,YAAYG;AAHC,EAAA,KAAd,CAAV;;AAMA,EAAA,QAAM+B,eAAe,SAAfA,YAAe,CAAChF,IAAD,EAAU;AAC7B,EAAA,UAAMH,IAAIiD,YAAY9C,IAAZ,IAAoBoE,kBAAMtI,EAAN,GAAS0D,KAAKC,IAAL,CAAU,CAAV,CAAvC;AACAqD,EAAAA,kBAAY9C,IAAZ,IAAoBH,CAApB;AACA7D,EAAAA,WAAKgB,aAAL;AACAhB,EAAAA,WAAKkB,eAAL;AACD,EAAA,KALD;;AAOA,EAAA,QAAM6G,WAAW,cACVxE,EAAEH,EADQ,IACJc,MAAM8E,aAAaV,IAAb,CAAkBtI,IAAlB,EAAwB8G,YAAYd,WAAZ,KAA4B/D,SAA5B,GAAwC,aAAxC,GAAuD,QAA/E,CADF,IAAjB;;AAIA,EAAA,QAAI6E,YAAYf,WAAhB,EAA4B;AAC1BgC,EAAAA,eAASW,IAAT,cAAmBnF,EAAEF,EAArB,IAAyBa,MAAM8E,aAAaV,IAAb,CAAkBtI,IAAlB,EAAwB,aAAxB,CAA/B;AACD,EAAA;AACD4D,EAAAA,cAAU5D,KAAKqI,UAAL,CAAgBN,QAAhB,CAAV;AACD,EAAA;;AAED,EAAA,SAAO,EAAE1B,YAAY,CAAC2B,CAAD,CAAd,EAAmBpE,gBAAnB,EAAP;AACH,EAAA,CA9BD;;ACAA,qBAAe,gBAA0B;AAAA,EAAA,MAAvBkD,WAAuB,QAAvBA,WAAuB;AAAA,EAAA,MAAV9G,IAAU,QAAVA,IAAU;;AACrC,EAAA,MAAI,CAAC8G,YAAY7B,KAAjB,EAAuB;AAAE6B,EAAAA,gBAAY7B,KAAZ,GAAoB,GAApB;AAAyB,EAAA;AAClD,EAAA,MAAI,CAAC6B,YAAY9B,MAAjB,EAAwB;AAAE8B,EAAAA,gBAAY9B,MAAZ,GAAqB,GAArB;AAA0B,EAAA;;AAEpD,EAAA,MAAIpB,UAAU,EAAd;AAJqC,EAAA,MAK/BqB,KAL+B,GAKb6B,WALa,CAK/B7B,KAL+B;AAAA,EAAA,MAKxBD,MALwB,GAKb8B,WALa,CAKxB9B,MALwB;;;AAOrC,EAAA,MAAMjF,OAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EACX,CAAEkF,KAAF,EAAS,CAAT,CADW,EAEX,CAAEA,KAAF,EAASD,MAAT,CAFW,EAGX,CAAC,CAAD,EAAIA,MAAJ,CAHW,EAIX,CAAC,CAAD,EAAI,CAAJ,CAJW,CAAb;AAKA,EAAA,MAAIiE,OAAO/D,YAAY,EAAEnF,UAAF,EAAQO,WAAY,SAApB,EAAZ,CAAX;;AAEA,EAAA,MAAIN,KAAKmC,QAAT,EAAkB;;AAEhB,EAAA,QAAM+G,cAAc,SAAdA,WAAc,CAAClF,IAAD,EAAU;AAC5B8C,EAAAA,kBAAY7B,KAAZ,GAAoBmD,kBAAMzI,CAA1B;AACAK,EAAAA,WAAKgB,aAAL;AACAhB,EAAAA,WAAKkB,eAAL;AACD,EAAA,KAJD;;AAMA,EAAA,QAAMiI,eAAe,SAAfA,YAAe,GAAM;AACzBrC,EAAAA,kBAAY9B,MAAZ,GAAqBoD,kBAAMxI,CAA3B;AACAI,EAAAA,WAAKgB,aAAL;AACAhB,EAAAA,WAAKkB,eAAL;AACD,EAAA,KAJD;;AAMA,EAAA,QAAMkI,WAAW,CAAC,EAAEzJ,GAAGsF,KAAL,EAAYrF,GAAGoF,SAAO,CAAtB,EAAyBd,MAAMgF,YAAYZ,IAAZ,CAAiBtI,IAAjB,CAA/B,EAAD,EACf,EAAEL,GAAGsF,QAAM,CAAX,EAAcrF,GAAGoF,MAAjB,EAAyBd,MAAMiF,aAAab,IAAb,CAAkBtI,IAAlB,CAA/B,EADe,CAAjB;;AAIA4D,EAAAA,cAAU5D,KAAKqI,UAAL,CAAgBe,QAAhB,CAAV;AAED,EAAA;;AAED,EAAA,SAAO,EAAE/C,YAAY,CAAC4C,IAAD,CAAd,EAAsBrF,gBAAtB,EAAP;AACH,EAAA,CArCD;;ACAA,0BAAe,gBAA2B;AAAA,EAAA,MAAxBkD,WAAwB,QAAxBA,WAAwB;AAAA,EAAA,MAAX9G,IAAW,QAAXA,IAAW;;AACxC,EAAA,MAAM+E,SAAS/E,KAAKwG,UAAL,CAAgBC,QAA/B;;AAEA,EAAA,MAAIC,KAAK,CAACI,YAAYJ,EAAZ,KAAmBzE,SAAnB,GAA+B6E,YAAYJ,EAA3C,GAAgD3B,OAAOpF,CAAxD,IAA6DoF,OAAOpF,CAA7E;AAAA,EAAA,MACEgH,KAAK,CAACG,YAAYH,EAAZ,KAAmB1E,SAAnB,GAA+B6E,YAAYH,EAA3C,GAAgD5B,OAAOpF,CAAxD,IAA6DoF,OAAOpF,CAD3E;AAAA,EAAA,MAEEiH,KAAK,CAACE,YAAYF,EAAZ,KAAmB3E,SAAnB,GAA+B6E,YAAYF,EAA3C,GAAgD7B,OAAOnF,CAAxD,IAA6DmF,OAAOnF,CAF3E;AAAA,EAAA,MAGEiH,KAAK,CAACC,YAAYD,EAAZ,KAAmB5E,SAAnB,GAA+B6E,YAAYD,EAA3C,GAAgD9B,OAAOnF,CAAxD,IAA6DmF,OAAOnF,CAH3E;;AAKA,EAAA,MAAMG,OAAO,CAAC,CAAC2G,EAAD,EAAKE,EAAL,CAAD,EAAW,CAACD,EAAD,EAAKE,EAAL,CAAX,CAAb;AACA,EAAA,SAAO,EAAER,YAAY,CAACnB,YAAY,EAAEnF,UAAF,EAAQO,WAAY,SAApB,EAAZ,CAAD,CAAd,EAAP;AACD,EAAA,CAVD;;ACAA,sBAAe,gBAA2B;AAAA,EAAA,MAAxBwG,WAAwB,QAAxBA,WAAwB;AAAA,EAAA,MAAX9G,IAAW,QAAXA,IAAW;;AACxC,EAAA,MAAI,CAAC8G,YAAYb,MAAjB,EAA0Ba,YAAYb,MAAZ,GAAqB,EAArB;AAC1B,EAAA,MAAI,CAACa,YAAYnH,CAAjB,EAAoBmH,YAAYnH,CAAZ,GAAe,MAAf;AACpB,EAAA,MAAI,CAACmH,YAAYlH,CAAjB,EAAoBkH,YAAYlH,CAAZ,GAAgB,KAAhB;;AAEpB,EAAA,MAAIgE,UAAU,EAAd;AACA,EAAA,MAAMqC,SAASa,YAAYb,MAA3B;AACA,EAAA,MAAMF,cAAcE,SAAO,EAA3B;AACA,EAAA,MAAMtG,IAAImH,YAAYnH,CAAZ,IAAiB,MAAjB,GAA0B,CAACsG,MAA3B,GAAoCA,MAA9C;AACA,EAAA,MAAMrG,IAAIkH,YAAYlH,CAAZ,IAAiB,KAAjB,GAAyB,CAACqG,MAA1B,GAAmCA,MAA7C;AACA,EAAA,MAAM8C,2BAAyBpJ,CAAzB,UAA+BC,CAA/B,MAAN;AACA,EAAA,MAAMyJ,WAAWzD,WAAW,EAAEtF,WAAW,SAAb,EAAwBP,MAAM,EAAEkG,cAAF,EAA9B,EAAX,CAAjB;AACAoD,EAAAA,WAAS1D,KAAT,CAAeoD,SAAf,GAA2BA,SAA3B;;AAEA,EAAA,MAAMO,SAAS1D,WAAW,EAAEtF,WAAW,cAAb,EAA6BP,MAAM,EAAEiG,aAAaC,MAAf,EAAuBF,wBAAvB,EAAnC,EAAX,CAAf;AACAuD,EAAAA,SAAO3D,KAAP,CAAaoD,SAAb,GAAyBA,SAAzB;;AAEA,EAAA,MAAMQ,UAAUrE,YAAY,EAAE5E,WAAW,iBAAb;AAC1BP,EAAAA,UAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACJ,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAIC,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB;AADoB,EAAA,GAAZ,CAAhB;;AAIA,EAAA,MAAII,KAAKmC,QAAT,EAAkB;;AAEhB,EAAA,QAAMqH,YAAY,SAAZA,SAAY,GAAM;AACtB1C,EAAAA,kBAAYnH,CAAZ,GAAgByI,kBAAMzI,CAAN,GAAU,CAAV,GAAc,MAAd,GAAuB,OAAvC;AACAmH,EAAAA,kBAAYlH,CAAZ,GAAgBwI,kBAAMxI,CAAN,GAAU,CAAV,GAAc,KAAd,GAAsB,QAAtC;AACAI,EAAAA,WAAKgB,aAAL;AACD,EAAA,KAJD;;AAMA,EAAA,QAAMyI,WAAW,CAAC,EAAE9J,GAAGA,IAAE,CAAP,EAAUC,GAAGA,IAAE,CAAf,EAAkBsE,MAAMsF,UAAUlB,IAAV,CAAetI,IAAf,CAAxB,EAAD,CAAjB;AACA4D,EAAAA,cAAU5D,KAAKqI,UAAL,CAAgBoB,QAAhB,CAAV;AAED,EAAA;;AAED,EAAA,MAAIC,aAAJ;AACA,EAAA,MAAI5C,YAAY4C,IAAhB,EAAqB;AACnBA,EAAAA,WAAO;AACL1J,EAAAA,YAAM,MADD;AAELM,EAAAA,iBAAW,YAFN;AAGLqF,EAAAA,aAAO;AACL+D,EAAAA,cAAM5C,YAAY4C,IADb;AAEL,EAAA,uBAAe,QAFV;AAGL7J,EAAAA,YAAI,OAHC;AAILF,EAAAA,YAJK;AAKLC,EAAAA;AALK,EAAA;AAHF,EAAA,KAAP;AAWD,EAAA;AACD,EAAA,SAAO,EAAEyG,YAAY,CAACkD,OAAD,EAAUF,QAAV,EAAoBC,MAApB,EAA4BI,IAA5B,CAAd,EAAiD9F,gBAAjD,EAAP;AACD,EAAA,CAjDD;;MCmBa+F,IAAb;AACE,EAAA,sBAA6E;AAAA,EAAA,QAA/DvH,CAA+D,QAA/DA,CAA+D;AAAA,EAAA,QAA5DoE,UAA4D,QAA5DA,UAA4D;AAAA,EAAA,QAAhDrE,QAAgD,QAAhDA,QAAgD;AAAA,EAAA,QAAtCyH,UAAsC,QAAtCA,UAAsC;AAAA,EAAA,QAA1BnH,WAA0B,QAA1BA,WAA0B;AAAA,EAAA,QAAbb,SAAa,QAAbA,SAAa;AAAA,EAAA;;AAC3E,EAAA,SAAKQ,CAAL,GAASA,CAAT;;AAEA,EAAA,SAAKjC,IAAL,GAAYqG,WAAWpG,OAAX,CAAmByJ,OAAnB,CAA2B,MAA3B,MAAuC,CAAC,CAAxC,IAA6CzH,EAAEgC,MAAF,CAAS,mBAAT,CAAzD;AACA,EAAA,SAAK0F,WAAL,GAAmB,KAAK3J,IAAL,IAAaiC,EAAEgC,MAAF,CAAS,2BAAT,CAAhC;AACA,EAAA,SAAKlE,SAAL,GAAiBsG,WAAWpG,OAAX,CAAmByJ,OAAnB,CAA2B,WAA3B,MAA4C,CAAC,CAA7C,IAAkDzH,EAAEgC,MAAF,CAAS,wBAAT,CAAnE;AACA,EAAA,SAAKnE,OAAL,GAAeuG,WAAWpG,OAAX,CAAmByJ,OAAnB,CAA2B,SAA3B,MAA0C,CAAC,CAA3C,IAAgDzH,EAAEgC,MAAF,CAAS,sBAAT,CAA/D;;AAEA,EAAA,QAAIwF,UAAJ,EAAe;AACb,EAAA,UAAMG,UAAUC,YAAY1B,IAAZ,CAAiB,IAAjB,EAAuBsB,UAAvB,EAAmCpD,UAAnC,CAAhB;AACAuD,EAAAA,cAAQ,EAAEE,WAAW,KAAK9J,IAAlB,EAAwB+J,MAAM,MAA9B,EAAR;AACAH,EAAAA,cAAQ,EAAEE,WAAW,KAAK/J,SAAlB,EAA6BgK,MAAM,WAAnC,EAAR;AACAH,EAAAA,cAAQ,EAAEE,WAAW,KAAKhK,OAAlB,EAA2BiK,MAAM,SAAjC,EAAR;AACD,EAAA;;AAED,EAAA,SAAK1D,UAAL,GAAkBA,UAAlB;AACA,EAAA,SAAKrE,QAAL,GAAgBqE,WAAWrE,QAAX,IAAuBA,QAAvC;AACA,EAAA,SAAKM,WAAL,GAAmBA,eAAe,CAAlC;AACA,EAAA,SAAK0H,aAAL,GAAqB,CAArB;AACA,EAAA,SAAKC,aAAL,GAAqB,CAArB;;AAEA,EAAA,QAAIxI,aAAa4E,WAAWzG,IAA5B,EAAiC;AAC/B,EAAA,WAAKsK,IAAL,CAAUzI,SAAV;AACD,EAAA;AACF,EAAA;;AAzBH,EAAA;AAAA,EAAA;AAAA,EAAA,yBA2BOA,SA3BP,EA2BkB;AACd,EAAA,UAAI,CAAC,KAAK4E,UAAL,CAAgB7G,CAArB,EAAuB;AACrB,EAAA,aAAK2K,IAAL,CAAU1I,SAAV;AACD,EAAA;AACD,EAAA,UAAI,CAAC,KAAK4E,UAAL,CAAgB5G,CAArB,EAAuB;AACrB,EAAA,aAAK2K,IAAL,CAAU3I,SAAV;AACD,EAAA;AACF,EAAA;AAlCH,EAAA;AAAA,EAAA;AAAA,EAAA,yBAoCOA,SApCP,EAoCiB;AACb,EAAA,UAAIA,UAAUhC,CAAd,EAAgB;AACd,EAAA,aAAK4G,UAAL,CAAgB5G,CAAhB,GAAoBgC,UAAUhC,CAAV,CAAY,KAAK4G,UAAL,CAAgBzG,IAA5B,CAApB;AACD,EAAA;AACF,EAAA;AAxCH,EAAA;AAAA,EAAA;AAAA,EAAA,yBA0CO6B,SA1CP,EA0CkB;AACd,EAAA,UAAIA,UAAUjC,CAAd,EAAgB;AACd,EAAA,aAAK6G,UAAL,CAAgB7G,CAAhB,GAAoBiC,UAAUjC,CAAV,CAAY,KAAK6G,UAAL,CAAgBzG,IAA5B,CAApB;AACD,EAAA;AACF,EAAA;AA9CH,EAAA;AAAA,EAAA;AAAA,EAAA,qCAiDoB;AAChB,EAAA,WAAKqC,CAAL,CAAOvB,SAAP,CAAiB,eAAjB,EACGyB,MADH;AAED,EAAA;AApDH,EAAA;AAAA,EAAA;AAAA,EAAA,8BAsDa2H,SAtDb,EAsDwBO,QAtDxB,EAsDkC;AAAA,EAAA;;AAC9B,EAAA,UAAI,CAACC,MAAMC,OAAN,CAAcF,QAAd,CAAL,EAA6B;AAC3BA,EAAAA,mBAAW,CAAEA,QAAF,CAAX;AACD,EAAA;;AAEDA,EAAAA,eACGG,MADH,CACU;AAAA,EAAA,eAAKC,CAAL;AAAA,EAAA,OADV,EAEG7I,OAFH,CAEW,iBAAwC;AAAA,EAAA,YAArC/B,IAAqC,SAArCA,IAAqC;AAAA,EAAA,YAA/BM,SAA+B,SAA/BA,SAA+B;AAAA,EAAA,YAApBqF,KAAoB,SAApBA,KAAoB;AAAA,EAAA,YAAb/B,OAAa,SAAbA,OAAa;;AAC/C,EAAA,YAAI5D,SAAS,QAAb,EAAsB;AACpB0D,EAAAA,qBAAW,EAAEC,OAAOsG,SAAT,EAAoBpG,GAAG8B,SAASA,MAAM9B,CAAtC,EAAyCD,gBAAzC,EAAX;AACD,EAAA,SAFD,MAEO;AAAA,EAAA;AACLiH,EAAAA,yBAAaZ,SAAb,EAAwB,CAAC,MAAKzD,UAAN,CAAxB,EAA2CxG,IAA3C,EAAiDM,SAAjD;;AAEA,EAAA,gBAAMwK,KAAKb,UAAU7F,MAAV,CAAoBpE,IAApB,SAA4BM,SAA5B,CAAX;AACA,EAAA,gBAAMyK,WAAWvJ,OAAOC,IAAP,CAAYkE,KAAZ,CAAjB;AACAoF,EAAAA,qBAAShJ,OAAT,CAAiB,gBAAQ;AACvB,EAAA,kBAAIiC,SAAS,MAAb,EAAoB;AAClB8G,EAAAA,mBAAGpB,IAAH,CAAQ/D,MAAM3B,IAAN,CAAR;AACD,EAAA,eAFD,MAEO;AACL8G,EAAAA,mBAAG9G,IAAH,CAAQA,IAAR,EAAc2B,MAAM3B,IAAN,CAAd;AACD,EAAA;AACF,EAAA,aAND;AALK,EAAA;AAYN,EAAA;AACF,EAAA,OAlBH;AAmBD,EAAA;;AAED,EAAA;;AAhFF,EAAA;AAAA,EAAA;AAAA,EAAA,kCAkFgB;AAAE,EAAA,aAAOgH,mBAAmB,KAAK7K,IAAxB,EAA8B,+BAA9B,CAAP;AAAsE,EAAA;AAlFxF,EAAA;AAAA,EAAA;AAAA,EAAA,wCAmFsB;AAClB,EAAA,UAAM0E,OAAOmG,mBAAmB,KAAK7K,IAAxB,EAA8B,0BAA9B,CAAb;AACA,EAAA,UAAM4I,YAAY,KAAKe,WAAL,CAAiB9F,IAAjB,CAAsB,WAAtB,EAAmCiH,KAAnC,CAAyC,WAAzC,CAAlB;AACApG,EAAAA,WAAKsF,aAAL,GAAqBe,WAAWnC,UAAU,CAAV,CAAX,IAA2B,KAAKvC,UAAL,CAAgB1G,EAAhE;AACA+E,EAAAA,WAAKuF,aAAL,GAAqBc,WAAWnC,UAAU,CAAV,CAAX,IAA2B,KAAKvC,UAAL,CAAgB3G,EAAhE;AACAgF,EAAAA,WAAKsG,OAAL,GAAe,KAAK3E,UAAL,CAAgB1G,EAA/B;AACA+E,EAAAA,WAAKuG,OAAL,GAAe,KAAK5E,UAAL,CAAgB3G,EAA/B;AACA,EAAA,aAAOgF,IAAP;AACD,EAAA;;AAED,EAAA;AACA,EAAA;AACA,EAAA;;AA/FF,EAAA;AAAA,EAAA;AAAA,EAAA,kCAiG2B;AAAA,EAAA,UAAZY,OAAY,uEAAJ,EAAI;;AACvB,EAAA,UAAMqB,cAAc,KAAKN,UAAL,CAAgBvG,OAApC;AACA,EAAA,UAAMD,OAAOyF,QAAQzF,IAArB;AACA,EAAA,UAAMqL,gBAAgB,EAAErL,MAAM,IAAR,EAAc8G,wBAAd,EAAtB;;AAEA,EAAA,UAAI7G,UAAU,EAAd;AACA,EAAA,UAAID,SAAS,QAAb,EAAuBC,UAAUqL,cAAcD,aAAd,CAAV,CAAvB,KACK,IAAIrL,SAAS,MAAb,EAAqBC,UAAUsL,YAAYF,aAAZ,CAAV,CAArB,KACA,IAAIrL,SAAS,WAAb,EAA0BC,UAAUuL,iBAAiBH,aAAjB,CAAV,CAA1B,KACA,IAAIrL,SAAS,OAAb,EAAsBC,UAAUwL,aAAaJ,aAAb,CAAV;;AATJ,EAAA,qBAWapL,OAXb;AAAA,EAAA,yCAWjBoG,UAXiB;AAAA,EAAA,UAWjBA,UAXiB,uCAWN,EAXM;AAAA,EAAA,sCAWFzC,OAXE;AAAA,EAAA,UAWFA,OAXE,oCAWM,EAXN;;AAYvB,EAAA,UAAI,KAAKzB,QAAT,EAAkB;AAChByB,EAAAA,kBAAUA,QAAQ8H,MAAR,CAAe,KAAKrD,UAAL,CAAgB,CAAC,EAAEnE,MAAM,KAAKyH,WAAL,CAAiBrD,IAAjB,CAAsB,IAAtB,CAAR,EAAD,CAAhB,CAAf,CAAV;AACAjC,EAAAA,mBAAWqC,IAAX,CAAgB,EAAE1I,MAAM,QAAR,EAAkB4D,gBAAlB,EAAhB;AACD,EAAA;;AAED,EAAA,aAAOyC,UAAP;AACF,EAAA;AAnHF,EAAA;AAAA,EAAA;AAAA,EAAA,oCAqH6B;AAAA,EAAA,UAAZZ,OAAY,uEAAJ,EAAI;;AACzB,EAAA,UAAM4B,gBAAgB,KAAKb,UAAL,CAAgBtG,SAAtC;AACA,EAAA,UAAMF,OAAOqH,cAAcrH,IAAd,IAAsByF,QAAQzF,IAA3C;AACA,EAAA,UAAM4L,kBAAkB,EAAE5L,MAAM,IAAR,EAAcqH,4BAAd,EAAxB;AACAuE,EAAAA,sBAAgBrF,WAAhB,GAA8B,KAAKsF,YAAL,IAAqB,KAAKA,YAAL,CAAkB5L,OAAvC,IAAkD,KAAK4L,YAAL,CAAkB5L,OAAlB,CAA0BD,IAA1G;;AAEA,EAAA,UAAIE,YAAY,EAAhB;AACA,EAAA,UAAIF,SAAS,OAAb,EAAsBE,YAAY4L,eAAeF,eAAf,CAAZ,CAAtB,KACK,IAAI5L,SAAS,OAAb,EAAsBE,YAAY6L,eAAeH,eAAf,CAAZ,CAAtB,KACA1L,YAAY8L,cAAcJ,eAAd,CAAZ;;AAToB,EAAA,uBAWW1L,SAXX;AAAA,EAAA,6CAWnBmG,UAXmB;AAAA,EAAA,UAWnBA,UAXmB,yCAWR,EAXQ;AAAA,EAAA,0CAWJzC,OAXI;AAAA,EAAA,UAWJA,OAXI,sCAWI,EAXJ;;AAYzB,EAAA,UAAM2B,OAAOc,WAAW,CAAX,CAAb;AACA,EAAA,UAAM4F,UAAU5E,cAAc7C,GAAd,IAAqBiB,QAAQjB,GAA7C;AACA,EAAA,UAAIA,MAAM,EAAV;AACA,EAAA,UAAIyH,YAAY,OAAhB,EAAyBzH,MAAM0H,eAAe,EAAE1F,YAAY,KAAKA,UAAnB,EAA+BjC,OAAOgB,KAAKxF,IAAL,CAAU,CAAV,CAAtC,EAAoDyE,KAAKe,KAAKxF,IAAL,CAAU,CAAV,CAAzD,EAAf,CAAN,CAAzB,KACK,IAAIkM,YAAY,KAAhB,EAAuBzH,MAAM2H,aAAa,EAAE5G,UAAF,EAAb,CAAN;;AAE5B,EAAA,UAAIf,IAAI6B,UAAR,EAAmB;AAAEA,EAAAA,qBAAaA,WAAWqF,MAAX,CAAkBlH,IAAI6B,UAAtB,CAAb;AAA+C,EAAA;;AAEpE,EAAA,UAAI,KAAKlE,QAAT,EAAkB;AAChB,EAAA,YAAIyB,QAAQ7C,MAAR,KAAmB,CAAvB,EAA0BsF,WAAWqC,IAAX,CAAgB,EAAE1I,MAAM,QAAR,EAAkB4D,gBAAlB,EAAhB;AAC3B,EAAA;AACD,EAAA,aAAOyC,UAAP;AACD,EAAA;AA7IH,EAAA;AAAA,EAAA;AAAA,EAAA,+BA+IwB;AAAA,EAAA,UAAZZ,OAAY,uEAAJ,EAAI;;AACpB,EAAA,UAAM2G,WAAW,KAAK5F,UAAL,CAAgBrG,IAAjC;AACA,EAAA,UAAMwE,QAAQyH,SAASzH,KAAT,IAAkBc,QAAQd,KAA1B,IAAmC,SAAjD;AACA,EAAA,UAAM0H,aAAa,EAAExH,MAAMY,QAAQZ,IAAhB,EAAsBF,YAAtB,EAA6BI,QAAQ,KAAKyB,UAAL,CAAgBzB,MAArD,EAAnB;AACA,EAAA,UAAMuH,WAAWF,SAASE,QAAT,IAAqB7G,QAAQ6G,QAA9C;AACA,EAAA,UAAInM,OAAK,EAAT;AACA,EAAA,UAAImM,YAAY,UAAhB,EAA4BnM,OAAOoM,aAAaF,UAAb,CAAP,CAA5B,KACK,IAAIC,YAAY,YAAhB,EAA8BnM,OAAOqM,eAAeH,UAAf,CAAP;;AAPf,EAAA,kBASgBlM,IAThB;AAAA,EAAA,mCASdkG,UATc;AAAA,EAAA,UASdA,UATc,oCASH,EATG;AAAA,EAAA,gCASCzC,OATD;AAAA,EAAA,UASCA,OATD,iCASS,EATT;;AAUpB,EAAA,UAAI,KAAKzB,QAAT,EAAmB;AACjByB,EAAAA,kBAAU,KAAKyE,UAAL,CAAgB,CAAC,EAAE1I,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcsE,MAAM,KAAKuI,QAAL,CAAcnE,IAAd,CAAmB,IAAnB,CAApB,EAAD,CAAhB,CAAV;AACAjC,EAAAA,mBAAWqC,IAAX,CAAgB,EAAE1I,MAAM,QAAR,EAAkB4D,gBAAlB,EAAhB;AACD,EAAA;AACD,EAAA,aAAOyC,UAAP;AACD,EAAA;AA9JH,EAAA;AAAA,EAAA;AAAA,EAAA,oCAgKmBZ,OAhKnB,EAgK4B;AACxB,EAAA,UAAM2G,WAAW,KAAK5F,UAAL,CAAgBrG,IAAjC;AACA,EAAA,UAAMmD,UAAU8I,SAAS9I,OAAT,IAAoB,KAAKb,WAAzC;AACA,EAAA,UAAIqC,cAAcsH,SAAStH,WAAT,IAAwBW,QAAQX,WAAhC,IAA+C,WAAjE;AACA,EAAA,UAAMwH,WAAWF,SAASE,QAAT,IAAqB7G,QAAQ6G,QAA9C;AACA,EAAA,UAAM3H,QAAQyH,SAASzH,KAAT,IAAkBc,QAAQd,KAA1B,IAAmC,SAAjD;AACA,EAAA,UAAM4B,cAAc,KAAKsF,YAAL,IAAqB,KAAKA,YAAL,CAAkB5L,OAAvC,IAAkD,KAAK4L,YAAL,CAAkB5L,OAAlB,CAA0BD,IAAhG;;AAEA,EAAA,UAAIsM,YAAY,UAAhB,EAA4BxH,cAAe,WAAf,CAA5B,KACK,IAAIwH,YAAY,YAAhB,EAA8BxH,cAAc,WAAd;;AAEnC,EAAA,UAAMuH,aAAa,EAAE/I,gBAAF,EAAWuB,MAAMY,QAAQZ,IAAzB,EAA+BE,QAClD,KAAKyB,UAAL,CAAgBzB,MADG,EACKD,wBADL,EACkBH,YADlB,EAAnB;;AAXwB,EAAA,2BAcP+H,cAAcL,UAAd,CAdO;AAAA,EAAA,UAchB1M,CAdgB,kBAchBA,CAdgB;AAAA,EAAA,UAcbC,CAda,kBAcbA,CAda;;AAexB,EAAA,WAAKuK,aAAL,GAAqBxK,IAAI,KAAK6G,UAAL,CAAgB1G,EAAzC;AACA,EAAA,WAAKsK,aAAL,GAAqBxK,IAAI,KAAK4G,UAAL,CAAgB3G,EAAzC;AACA,EAAA,WAAKM,IAAL,IAAa,KAAK2J,WAAL,CAAiB9F,IAAjB,CAAsB,WAAtB,iBAAgDrE,CAAhD,UAAsDC,CAAtD,OAAb;;AAEA,EAAA,aAAO,EAAP;AACD,EAAA;AApLH,EAAA;AAAA,EAAA;AAAA,EAAA,iCAsLeqK,SAtLf,EAsL0B0C,YAtL1B,EAsLwC;AAAE,EAAA,aAAO,KAAKC,SAAL,CAAgB3C,SAAhB,EAA2B0C,YAA3B,CAAP;AAAiD,EAAA;AAtL3F,EAAA;AAAA,EAAA;AAAA,EAAA,oCAwLiB;AACb,EAAA,WAAK1M,OAAL,IAAgB,KAAK4M,YAAL,CAAmB,KAAK5M,OAAxB,EAAiC,KAAK6M,WAAL,EAAjC,CAAhB;AACD,EAAA;AA1LH,EAAA;AAAA,EAAA;AAAA,EAAA,sCA4L0C;AAAA,EAAA,UAAxBjI,IAAwB,uEAAnB,KAAKkI,WAAL,EAAmB;;AACtC,EAAA,WAAK7M,SAAL,IAAkB,KAAK2M,YAAL,CAAmB,KAAK3M,SAAxB,EAAmC,KAAK8M,aAAL,EAAnC,CAAlB;AACD,EAAA;AA9LH,EAAA;AAAA,EAAA;AAAA,EAAA,iCAgMqC;AAAA,EAAA,UAAxBnI,IAAwB,uEAAnB,KAAKkI,WAAL,EAAmB;;AACjC,EAAA,WAAKjD,WAAL,IAAoB,KAAK+C,YAAL,CAAmB,KAAK/C,WAAxB,EAAqC,KAAKmD,eAAL,CAAqB,EAAEpI,UAAF,EAArB,CAArC,CAApB;AACA,EAAA,WAAK1E,IAAL,IAAa,KAAK0M,YAAL,CAAmB,KAAK1M,IAAxB,EAA8B,KAAK+M,QAAL,CAAc,EAAErI,UAAF,EAAd,CAA9B,CAAb;AACD,EAAA;AAnMH,EAAA;AAAA,EAAA;AAAA,EAAA,kCAqMe;AACX,EAAA,UAAM4B,WAAW,KAAKD,UAAL,CAAgBC,QAAjC;AACA,EAAA,WAAKrE,CAAL,CAAO4B,IAAP,CAAY,WAAZ,iBAAsCyC,SAAS9G,CAA/C,UAAqD8G,SAAS7G,CAA9D;AACD,EAAA;AAxMH,EAAA;AAAA,EAAA;AAAA,EAAA,gCA0Ma;AACT,EAAA,UAAI,KAAKO,IAAT,EAAc;AACZ,EAAA,YAAM4E,SAAS,KAAKyB,UAAL,CAAgBzB,MAA/B;AACA,EAAA,aAAK5E,IAAL,CAAU6D,IAAV,CAAe,WAAf,iBAAyCe,OAAOpF,CAAhD,UAAsDoF,OAAOnF,CAA7D;AACD,EAAA;AACF,EAAA;AA/MH,EAAA;AAAA,EAAA;AAAA,EAAA,6CAiN2BgC,SAjN3B,EAiNqC;AACjC,EAAA,UAAIA,aAAa,KAAK4E,UAAL,CAAgBzG,IAAjC,EAAsC;AACpC,EAAA,aAAKuK,IAAL,CAAU1I,SAAV;AACA,EAAA,aAAK2I,IAAL,CAAU3I,SAAV;AACD,EAAA;AACD,EAAA,WAAKhB,WAAL;AACD,EAAA;AAvNH,EAAA;AAAA,EAAA;AAAA,EAAA,mCA0NgB;AACZ,EAAA,WAAKwB,CAAL,CAAO4B,IAAP,CAAY,OAAZ,mBAAmC,KAAK1D,SAAL,IAAkB,KAAKA,SAAL,EAArD,WAAyE,KAAK6B,QAAL,GAAgB,UAAhB,GAA6B,EAAtG,WAA4G,KAAKqE,UAAL,CAAgBlG,SAAhB,IAA6B,EAAzI;AACD,EAAA;AA5NH,EAAA;AAAA,EAAA;AAAA,EAAA,2BA8NS;AACL,EAAA,WAAKc,YAAL;AACA,EAAA,WAAKR,WAAL;AACA,EAAA,WAAKK,SAAL;AACA,EAAA,WAAKD,aAAL;AACA,EAAA,WAAKE,eAAL;AACA,EAAA,WAAKC,UAAL;AACD,EAAA;AArOH,EAAA;AAAA,EAAA;AAAA,EAAA,kCAuOgB;AAAEiH,EAAAA,wBAAM+E,WAAN,CAAkBC,eAAlB;AACd,EAAA,WAAKhL,CAAL,CAAOiL,OAAP,CAAe,UAAf,EAA2B,IAA3B;AACA,EAAA,WAAKjL,CAAL,CAAOvB,SAAP,CAAiB,eAAjB,EAAkCyM,KAAlC,CAAwC,gBAAxC,EAA0D,MAA1D;AACD,EAAA;AA1OH,EAAA;AAAA,EAAA;AAAA,EAAA,gCA2Oc;AACV,EAAA,WAAKlL,CAAL,CAAOiL,OAAP,CAAe,UAAf,EAA2B,KAA3B;AACA,EAAA,WAAKjL,CAAL,CAAOvB,SAAP,CAAiB,eAAjB,EAAkCyM,KAAlC,CAAwC,gBAAxC,EAA0D,KAA1D;AACD,EAAA;AA9OH,EAAA;AAAA,EAAA;AAAA,EAAA,kCAgPgB;AACZ,EAAA,UAAM7G,WAAW,KAAKD,UAAL,CAAgBC,QAAjC;AACAA,EAAAA,eAAS9G,CAAT,IAAcyI,kBAAMtI,EAApB;AACA2G,EAAAA,eAAS7G,CAAT,IAAcwI,kBAAMvI,EAApB;AACA,EAAA,WAAK2G,UAAL,CAAgBC,QAAhB,GAA2BA,QAA3B;AACD,EAAA;AArPH,EAAA;AAAA,EAAA;AAAA,EAAA,+BAuPa;AACT,EAAA,UAAM1B,SAAS,KAAKyB,UAAL,CAAgBzB,MAA/B;AACAA,EAAAA,aAAOpF,CAAP,IAAYyI,kBAAMtI,EAAlB;AACAiF,EAAAA,aAAOnF,CAAP,IAAYwI,kBAAMvI,EAAlB;AACA,EAAA,WAAK2G,UAAL,CAAgBzB,MAAhB,GAAyBA,MAAzB;AACD,EAAA;AA5PH,EAAA;AAAA,EAAA;AAAA,EAAA,+BA8PanB,OA9Pb,EA8PsB;AAAA,EAAA;;AAClB,EAAA,aAAOA,QACNlB,GADM,CACF;AAAA,EAAA,4BAAWa,CAAX;AACHgB,EAAAA,iBAAO,OAAKgJ,WAAL,CAAiBjF,IAAjB,QADJ,EACiC9D,KAAK,OAAKgJ,SAAL,CAAelF,IAAf,QADtC;AAAA,EAAA,OADE,CAAP;AAGD,EAAA;AAlQH,EAAA;AAAA,EAAA;AAAA,EAAA;;AAqQA,AAAO,EAAA,IAAMmF,aAAa,SAAbA,UAAa,CAACC,WAAD,EAAc7B,YAAd,EAA4BxB,KAA5B,EAAqC;AAC7D,EAAA;AAAA,EAAA;;AACE,EAAA,wBAAasD,QAAb,EAAuB;AAAA,EAAA;;AAAA,EAAA,0HACfA,QADe;;AAErB,EAAA,aAAK9B,YAAL,GAAoBA,YAApB;;AAEA,EAAA,UAAIA,aAAazL,OAAjB,EAAyB;AACvByL,EAAAA,qBAAazL,OAAb,CAAqB2B,OAArB,CAA6B,aAAK;AAChC,EAAA,iBAAKC,CAAL,IAAUC,SAAV;AACA,EAAA,cAAID,KAAK,MAAT,EAAgB;AACd,EAAA,mBAAK8H,WAAL,GAAmB7H,SAAnB;AACD,EAAA;AACF,EAAA,SALD;AAMD,EAAA;AAXoB,EAAA;AAYtB,EAAA;;AAbH,EAAA;AAAA,EAAA;AAAA,EAAA,kCAuBa;AAAE,EAAA,gBAAU4J,aAAavL,SAAb,IAA0B,EAApC,WAA0CsN,6NAAwC,EAAlF;AAAuF,EAAA;AAvBtG,EAAA;AAAA,EAAA;AAAA,EAAA,kCAyBcnI,OAzBd,EAyBsB;AACjB,EAAA,aAAKoG,YAAL,CAAkB5L,OAAlB,GAA4BuB,OAAOqM,MAAP,CAAc,EAAd,EAAkBhC,aAAa5L,OAA/B,EAAwC,KAAK4L,YAAL,CAAkB5L,OAA1D,CAA5B;AACA,EAAA,+IAA8BwF,OAA9B,EAA0C,KAAKoG,YAAL,CAAkB5L,OAA5D;AACF,EAAA;AA5BH,EAAA;AAAA,EAAA;AAAA,EAAA,oCA8BgBwF,OA9BhB,EA8ByBqI,cA9BzB,EA8BwC;AACpC,EAAA,aAAKjC,YAAL,CAAkB3L,SAAlB,GAA8BsB,OAAOqM,MAAP,CAAc,EAAd,EAAkBhC,aAAa3L,SAA/B,EAA0C,KAAK2L,YAAL,CAAkB3L,SAA5D,CAA9B;AACA,EAAA,iJAAgCuF,OAAhC,EAA4CoG,aAAa3L,SAAzD,EAAuE,KAAK2L,YAAL,CAAkB3L,SAAzF;AACD,EAAA;AAjCH,EAAA;AAAA,EAAA;AAAA,EAAA,+BAmCWuF,OAnCX,EAmCmB;AACf,EAAA,aAAKoG,YAAL,CAAkB1L,IAAlB,GAAyBqB,OAAOqM,MAAP,CAAc,EAAd,EAAkBhC,aAAa1L,IAA/B,EAAqC,KAAK0L,YAAL,CAAkB1L,IAAvD,CAAzB;AACA,EAAA,4IAA2BsF,OAA3B,EAAuCoG,aAAa1L,IAApD,EAA6D,KAAK0L,YAAL,CAAkB1L,IAA/E;AACD,EAAA;AAtCH,EAAA;AAAA,EAAA;AAAA,EAAA,sCAwCkBsF,OAxClB,EAwC0B;AACtB,EAAA,mJAAkCA,OAAlC,EAA8CoG,aAAa1L,IAA3D,EAAoE,KAAK0L,YAAL,CAAkB1L,IAAtF;AACD,EAAA;AA1CH,EAAA;AAAA,EAAA;AAAA,EAAA,2BAecqG,UAfd,EAe0B5E,SAf1B,EAeoC;AAChC,EAAA,gGAAW4E,UAAX,EAAuB5E,SAAvB;AACA,EAAA,YAAIyI,KAAJ,EAAU;AACR7D,EAAAA,uBAAa6D,MAAK7D,UAAL,EAAiB5E,SAAjB,CAAb;AACD,EAAA;AACD,EAAA,eAAO4E,UAAP;AACD,EAAA;AArBH,EAAA;AAAA,EAAA;AAAA,EAAA,IAAgCkH,WAAhC;AA4CD,EAAA,CA7CM;;AA+CP,MAAaK,UAAb;AAAA,EAAA;;AAEE,EAAA,sBAAYC,MAAZ,EAAmB;AAAA,EAAA;;AAAA,EAAA,wHACXA,MADW;;AAEjB,EAAA,WAAKzL,QAAL,GAAgByL,OAAOzL,QAAP,IAAmB,GAAnC;AACA,EAAA,WAAK0L,QAAL;AAHiB,EAAA;AAIlB,EAAA;;AANH,EAAA;AAAA,EAAA;AAAA,EAAA,mCAQkB1L,QARlB,EAQ4B;AACxB,EAAA,WAAKA,QAAL,GAAgBA,QAAhB;AACA,EAAA,WAAK0L,QAAL;AACD,EAAA;;AAED,EAAA;;AAbF,EAAA;AAAA,EAAA;AAAA,EAAA,+BAec;AACV,EAAA,UAAI,KAAK9N,IAAT,EAAc;;AAEZ0K,EAAAA,qBAAa,KAAK1K,IAAlB,EAAwB,CAAC,KAAKqG,UAAN,CAAxB,EAA2C,GAA3C,EAAgD,yBAAhD;;AAEA,EAAA,YAAMsD,cAAc,KAAK3J,IAAL,CAAUiE,MAAV,CAAiB,2BAAjB,CAApB;AACAyG,EAAAA,qBAAaf,WAAb,EAA0B,CAAC,KAAKtD,UAAN,CAA1B,EAA6C,MAA7C,EAAqD,oBAArD;AACAqE,EAAAA,qBAAaf,WAAb,EAA0B,CAAC,KAAKtD,UAAN,CAA1B,EAA6C,MAA7C,EAAqD,uBAArD;AACAqE,EAAAA,qBAAaf,WAAb,EAA0B,CAAC,KAAKtD,UAAN,CAA1B,EAA6C,MAA7C,EAAqD,uBAArD;;AAEA,EAAA,YAAI0H,YAAY,EAAElJ,QAAQ,CAAV,EAAhB;AACA,EAAA,YAAMmJ,QAAQ,KAAK/L,CAAL,CAAOgC,MAAP,CAAc,4BAAd,CAAd;AACA,EAAA,YAAMgK,aAAa,KAAK5H,UAAL,CAAgBrG,IAAhB,IAAwB,KAAKqG,UAAL,CAAgBrG,IAAhB,CAAqBkO,IAA7C,IACjB,KAAKxC,YAAL,IAAqB,KAAKA,YAAL,CAAkB1L,IAAvC,IAA+C,KAAK0L,YAAL,CAAkB1L,IAAlB,CAAuBkO,IADrD,IAEjB,KAAK9L,QAFP;;AAIA,EAAA,YAAI,KAAKiE,UAAL,CAAgBrG,IAAhB,CAAqBmO,KAAzB,EAA+B;AAC7B,EAAA,cAAMA,QAAQ,KAAKlM,CAAL,CAAOgC,MAAP,CAAc,4BAAd,CAAd;AACAkK,EAAAA,gBAAM5E,IAAN,CAAW,KAAKlD,UAAL,CAAgBrG,IAAhB,CAAqBmO,KAAhC,EACGtK,IADH,CACQ,IADR,EACc,OADd;AAEAsK,EAAAA,gBAAMrK,IAAN,CAAWoK,IAAX,EAAiBD,UAAjB;AACAF,EAAAA,sBAAYI,MAAMjK,IAAN,GAAakK,OAAb,EAAZ;AACD,EAAA;;AAEDJ,EAAAA,cAAMzE,IAAN,CAAW,KAAKlD,UAAL,CAAgBrG,IAAhB,CAAqBgO,KAAhC,EACGnK,IADH,CACQ,IADR,EACc,KADd;AAEAmK,EAAAA,cAAMlK,IAAN,CAAWoK,IAAX,EAAiBD,UAAjB;;AAEAD,EAAAA,cAAMnK,IAAN,CAAW,GAAX,EAAgBkK,UAAUlJ,MAAV,GAAmB,GAAnB,IAA0B,CAA1C;;AAEA,EAAA,YAAMH,OAAO,KAAKkI,WAAL,EAAb;AACA,EAAA,aAAK3K,CAAL,CAAOgC,MAAP,CAAc,yBAAd,EACGJ,IADH,CACQ,OADR,EACiBa,KAAKI,KADtB,EAEGjB,IAFH,CAEQ,QAFR,EAEkBa,KAAKG,MAFvB;AAGD,EAAA;AACF,EAAA;AAlDH,EAAA;AAAA,EAAA;AAAA,EAAA,EAAgC2E,IAAhC;;AAqDA,AAAO,EAAA,IAAM6E,UAAUf,WAAWM,UAAX,EAAuB;AAC5CzN,EAAAA,aAAW,OADiC;AAE5CH,EAAAA,QAAM,EAAEwE,OAAO,QAAT;AAFsC,EAAA,CAAvB,CAAhB;;AAKP,AAAO,EAAA,IAAM8J,YAAYhB,WAAWM,UAAX,EAAuB;AAC9CzN,EAAAA,aAAW,SADmC;AAE9CH,EAAAA,QAAM,EAAEmM,UAAU,YAAZ;AAFwC,EAAA,CAAvB,CAAlB;;AAKP,AAAO,EAAA,IAAMoC,iBAAiBjB,WAAWgB,SAAX,EAAsB;AAClDnO,EAAAA,aAAW,eADuC;AAElDJ,EAAAA,aAAW,EAAEF,MAAM,OAAR;AAFuC,EAAA,CAAtB,CAAvB;;AAKP,AAAO,EAAA,IAAM2O,iBAAiBlB,WAAWgB,SAAX,EAAsB;AAClDnO,EAAAA,aAAW,eADuC;AAElDJ,EAAAA,aAAW,EAAEF,MAAM,OAAR;AAFuC,EAAA,CAAtB,CAAvB;;AAKP,AAAO,EAAA,IAAM4O,UAAUnB,WAAW9D,IAAX,EAAiB;AACtCrJ,EAAAA,aAAW,OAD2B;AAEtCL,EAAAA,WAAS,EAAED,MAAM,OAAR,EAF6B;AAGtCI,EAAAA,WAAS,CAAC,WAAD,EAAc,MAAd;AAH6B,EAAA,CAAjB,CAAhB;;AAOP,AAAO,EAAA,IAAMyO,kBAAkBpB,WAAWiB,cAAX,EAA2B;AACxDpO,EAAAA,aAAW,gBAD6C;AAExDL,EAAAA,WAAS,EAAED,MAAM,QAAR;AAF+C,EAAA,CAA3B,CAAxB;;AAKP,AAAO,EAAA,IAAM8O,gBAAgBrB,WAAWiB,cAAX,EAA2B;AACtDpO,EAAAA,aAAW,cAD2C;AAEtDL,EAAAA,WAAS,EAAED,MAAM,MAAR;AAF6C,EAAA,CAA3B,CAAtB;;MAMD+O;;;;;;;;;;2BAECnN,WAAU;AACb,EAAA,sHAAWA,SAAX;AACA,EAAA,UAAMQ,IAAI,KAAKoE,UAAf;AACA,EAAA,UAAI,CAACpE,EAAEnC,OAAF,CAAUyG,EAAV,IAAgBtE,EAAEnC,OAAF,CAAU0G,EAA3B,KAAkCvE,EAAErC,IAApC,IAA4C6B,UAAUhC,CAA1D,EAA4D;AAC1DwC,EAAAA,UAAExC,CAAF,GAAMgC,UAAUhC,CAAV,CAAYwC,EAAErC,IAAd,CAAN;AACD,EAAA;AACF,EAAA;;;2BAEI6B,WAAW;AACd,EAAA,sHAAWA,SAAX;AACA,EAAA,UAAMQ,IAAI,KAAKoE,UAAf;AACA,EAAA,UAAI,CAACpE,EAAEnC,OAAF,CAAU2G,EAAV,IAAgBxE,EAAEnC,OAAF,CAAU4G,EAA3B,KAAkCzE,EAAErC,IAApC,IAA4C6B,UAAUjC,CAA1D,EAA4D;AAC1DyC,EAAAA,UAAEzC,CAAF,GAAMiC,UAAUjC,CAAV,CAAYyC,EAAErC,IAAd,CAAN;AACD,EAAA;AACF,EAAA;;;IAhBwB0O;;AAmB3B,AAAO,EAAA,IAAMO,gBAAgBvB,WAAWsB,YAAX,EAAyB;AACpDzO,EAAAA,aAAW,qBADyC;AAEpDL,EAAAA,WAAS,EAAED,MAAM,WAAR;AAF2C,EAAA,CAAzB,CAAtB;;AAOP,AAAO,EAAA,IAAM6K,eAAe,SAAfA,YAAe,CAACzI,CAAD,EAAIJ,CAAJ,EAAOhC,IAAP,EAAaM,SAAb,EAA2B;AACrD,EAAA,MAAMqD,QAAQvB,EAAEvB,SAAF,CAAeb,IAAf,SAAuBM,SAAvB,EAAoCP,IAApC,CAAyCiC,CAAzC,CAAd;AACA2B,EAAAA,QAAMG,KAAN,GACGC,MADH,CACU/D,IADV,EAEGiP,KAFH,CAEStL,KAFT,EAGGK,IAHH,CAGQ,OAHR,EAGiB1D,SAHjB;;AAKAqD,EAAAA,QAAMc,IAAN,GAAanC,MAAb;AACA,EAAA,SAAOF,CAAP;AACD,EAAA,CATM;;AAYP,EAAA,IAAM4H,cAAc,SAAdA,WAAc,CAAEJ,UAAF,EAAcpD,UAAd,SAAkD;AAAA,EAAA,MAAtByD,SAAsB,SAAtBA,SAAsB;AAAA,EAAA,MAAXC,IAAW,SAAXA,IAAW;;AACpE,EAAA,MAAID,SAAJ,EAAc;AACZA,EAAAA,cACC3F,EADD,CACI,uBADJ,EAC6B,YAAM;AACjCsF,EAAAA,iBAAW3F,IAAX,CAAmBiG,IAAnB,WAA+BD,SAA/B,EAA0CzD,UAA1C;AAAsD,EAAA,KAFxD,EAGClC,EAHD,CAGI,sBAHJ,EAG4B;AAAA,EAAA,aAAMsF,WAAW3F,IAAX,CAAmBiG,IAAnB,UAA8BD,SAA9B,EAAyCzD,UAAzC,CAAN;AAAA,EAAA,KAH5B,EAIClC,EAJD,CAII,mBAJJ,EAIyB;AAAA,EAAA,aAAMsF,WAAW3F,IAAX,CAAmBiG,IAAnB,YAAgCD,SAAhC,EAA2CzD,UAA3C,CAAN;AAAA,EAAA,KAJzB;AAKD,EAAA;AACF,EAAA,CARD;;AAUA,EAAA;AACA,EAAA,IAAM6H,OAAO,SAAPA,IAAO,CAAC3E,IAAD,EAAOzE,KAAP,EAAiB;AAC5ByE,EAAAA,OAAKwF,IAAL,CAAU,YAAW;AACnB,EAAA,QAAIxF,OAAOtF,mBAAO,IAAP,CAAX;AAAA,EAAA,QACI+K,QAAQzF,KAAKA,IAAL,GAAYuB,KAAZ,CAAkB,YAAlB,EAAgCmE,OAAhC,EADZ;AAAA,EAAA,QAEIC,IAFJ;AAAA,EAAA,QAGI9J,OAAO,EAHX;AAAA,EAAA,QAII+J,aAAa,CAJjB;AAAA,EAAA,QAKIC,aAAa,EALjB;AAAA,EAAA;AAMI3P,EAAAA,QAAI8J,KAAK1F,IAAL,CAAU,GAAV,CANR;AAAA,EAAA,QAOInE,KAAKqL,WAAWxB,KAAK1F,IAAL,CAAU,IAAV,CAAX,KAA+B,CAPxC;AAAA,EAAA,QAQIwL,QAAQ9F,KAAKA,IAAL,CAAU,IAAV,EACL3F,MADK,CACE,OADF,EAELC,IAFK,CAEA,GAFA,EAEK,CAFL,EAGLA,IAHK,CAGA,IAHA,EAGMnE,KAAK,IAHX,CARZ;;AAaA,EAAA,WAAOwP,OAAOF,MAAMM,GAAN,EAAd,EAA2B;AACzBlK,EAAAA,WAAKmD,IAAL,CAAU2G,IAAV;AACAG,EAAAA,YAAM9F,IAAN,CAAWnE,KAAKmK,IAAL,CAAU,GAAV,CAAX;AACA,EAAA,UAAIF,MAAMnL,IAAN,GAAasL,qBAAb,KAAuC1K,KAAvC,IAAgDM,KAAKxE,MAAL,GAAc,CAAlE,EAAqE;AACnEwE,EAAAA,aAAKkK,GAAL;AACAD,EAAAA,cAAM9F,IAAN,CAAWnE,KAAKmK,IAAL,CAAU,GAAV,CAAX;AACAnK,EAAAA,eAAO,CAAC8J,IAAD,CAAP;AACAG,EAAAA,gBAAQ9F,KAAK3F,MAAL,CAAY,OAAZ,EACLC,IADK,CACA,GADA,EACK,CADL,EAELA,IAFK,CAEA,IAFA,EAEMuL,aAAa1P,EAAb,GAAkB,IAFxB,EAE8B6J,IAF9B,CAEmC2F,IAFnC,CAAR;AAGD,EAAA;AACF,EAAA;AACF,EAAA,GA1BD;AA2BD,EAAA,CA5BD;;AA8BA,EAAA,IAAMrE,qBAAqB,SAArBA,kBAAqB,CAAC4E,SAAD,EAAyC;AAAA,EAAA,MAA7BC,QAA6B,uEAApB,eAAoB;;AAClE,EAAA,MAAI,CAACD,SAAL,EAAe;AACb,EAAA,WAAO,EAAEjQ,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcqF,OAAO,CAArB,EAAwBD,QAAQ,CAAhC,EAAP;AACD,EAAA;;AAED,EAAA,SAAO4K,UAAU/O,SAAV,CAAoBgP,QAApB,EAA8B/O,KAA9B,GAAsCgP,MAAtC,CAA6C,UAACrH,CAAD,EAAIT,CAAJ,EAAU;AACxD,EAAA,QAAMnD,OAAOmD,EAAEuG,OAAF,EAAb;AACA9F,EAAAA,MAAE9I,CAAF,GAAM6D,KAAKuM,GAAL,CAAStH,EAAE9I,CAAX,EAAckF,KAAKlF,CAAnB,CAAN;AACA8I,EAAAA,MAAE7I,CAAF,GAAM4D,KAAKuM,GAAL,CAAStH,EAAE7I,CAAX,EAAciF,KAAKjF,CAAnB,CAAN;AACA6I,EAAAA,MAAExD,KAAF,GAAUzB,KAAKwM,GAAL,CAASvH,EAAExD,KAAX,EAAkBJ,KAAKI,KAAvB,CAAV;AACAwD,EAAAA,MAAEzD,MAAF,IAAYH,KAAKG,MAAjB;AACA,EAAA,WAAOyD,CAAP;AACD,EAAA,GAPE,EAOA,EAAE9I,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcqF,OAAO,CAArB,EAAwBD,QAAQ,CAAhC,EAPA,CAAP;AAQD,EAAA,CAbD,CAeA;;EC7fe,SAASwB,UAAT,GAAqB;AAClC,EAAA,MAAI7E,cAAc,EAAlB;AAAA,EAAA,MACEsO,mBADF;AAAA,EAAA,MAEExK,gBAFF;AAAA,EAAA;AAGErF,EAAAA,YAAU,EAHZ;AAAA,EAAA,MAIEwB,YAAY,EAJd;AAAA,EAAA,MAKEC,mBAAmB,EALrB;AAAA,EAAA,MAMEM,WAAW,KANb;AAAA,EAAA,MAOE+N,YAPF;AAAA,EAAA,MAQElQ,OAAOyO,SART;AAAA,EAAA,MASElM,iBATF;AAAA,EAAA,MAUEE,oBAVF;AAAA,EAAA,MAWE0N,uBAAuBC,oBACvB,aADuB,EACR,YADQ,EACM,cADN,EAEvB,eAFuB,EAEN,cAFM,EAEU,gBAFV,EAGvB,UAHuB,EAGX,SAHW,EAGA,WAHA,CAXzB;AAAA,EAAA,MAeEC,YAfF;;AAiBA,EAAA,MAAM7J,aAAa,oBAASoJ,SAAT,EAAmB;AACpCS,EAAAA,UAAMT,SAAN;AACA,EAAA;AACA,EAAA,QAAI,CAACzN,QAAL,EAAc;AACZyN,EAAAA,gBAAU/O,SAAV,CAAoB,eAApB,EACGyB,MADH;AAED,EAAA;;AAED,EAAA,QAAMgO,wBAAwB3O,YAC3Be,GAD2B,CACvB,aAAK;AACR,EAAA,UAAI,CAACN,EAAEpC,IAAP,EAAa;AAAEoC,EAAAA,UAAEpC,IAAF,GAASA,IAAT;AAAe,EAAA;AAC9B,EAAA,UAAI,CAACoC,EAAEhC,OAAP,EAAgB;AAACgC,EAAAA,UAAEhC,OAAF,GAAYA,OAAZ;AAAoB,EAAA;AACrC,EAAA,aAAO,IAAIV,UAAJ,CAAe0C,CAAf,CAAP;AACD,EAAA,KAL2B,CAA9B;;AAOA6N,EAAAA,iBAAa,IAAIvO,oBAAJ,CAA0B;AACrCC,EAAAA,mBAAa2O,qBADwB;AAErC1O,EAAAA,0BAFqC;AAGrCC,EAAAA,wCAHqC;AAIrCqO,EAAAA;AAJqC,EAAA,KAA1B,CAAb;;AAQA,EAAA,QAAMK,cAAcX,UAAU/O,SAAV,CAAoB,GAApB,EAAyBd,IAAzB,CAA8B,CAACkQ,UAAD,CAA9B,CAApB;AACAM,EAAAA,gBAAYzM,KAAZ,GAAoBC,MAApB,CAA2B,GAA3B,EAAgCC,IAAhC,CAAqC,OAArC;;AAEA,EAAA,QAAML,QAAQiM,UAAUxL,MAAV,CAAiB,eAAjB,CAAd;AACAyG,EAAAA,iBAAalH,KAAb,EAAoBsM,WAAWtO,WAA/B,EAA4C,GAA5C,EAAiD,YAAjD;;AAEA,EAAA,QAAM6E,aAAa7C,MAAM9C,SAAN,CAAgB,cAAhB,CAAnB;;AAEA2F,EAAAA,eACG0I,IADH,CACQ,UAASlN,CAAT,EAAY;AAChB,EAAA,UAAMI,IAAIgC,mBAAO,IAAP,CAAV;AACA,EAAA,UAAMqC,WAAWzE,EAAEyE,QAAnB;;AAEArE,EAAAA,QAAE4B,IAAF,CAAO,OAAP,EAAgB,YAAhB;;AAEA6G,EAAAA,mBAAazI,CAAb,EAAgB,CAACJ,CAAD,CAAhB,EAAqB,GAArB,EAA0B,sBAA1B;AACA6I,EAAAA,mBAAazI,CAAb,EAAgB,CAACJ,CAAD,CAAhB,EAAqB,GAArB,EAA0B,oBAA1B;AACA6I,EAAAA,mBAAazI,CAAb,EAAgB,CAACJ,CAAD,CAAhB,EAAqB,GAArB,EAA0B,iBAA1B;AACA6I,EAAAA,mBAAazI,EAAEgC,MAAF,CAAS,mBAAT,CAAb,EAA4C,CAACpC,CAAD,CAA5C,EAAiD,GAAjD,EAAsD,yBAAtD;;AAEAA,EAAAA,QAAEhC,IAAF,GAAS,IAAIgC,EAAEhC,IAAN,CAAW,EAAEoC,IAAF,EAAKoE,YAAYxE,CAAjB,EAAoBO,kBAApB,EAA8BE,wBAA9B,EAA2CN,kBAA3C;AAClByH,EAAAA,oBAAYuG,oBADM,EACgBvO,oBADhB,EAAX,CAAT;AAEAI,EAAAA,QAAEhC,IAAF,CAAOwQ,IAAP;AACD,EAAA,KAfH;AAgBD,EAAA,GA/CD;;AAiDAhK,EAAAA,aAAWjF,IAAX,GAAkB,YAAW;AAC3BkP,EAAAA,YAAQC,GAAR,CAAY,oLAAZ,EAAkMT,WAAW1O,IAA7M;AACAoP,EAAAA,WAAOC,IAAP,CAAYC,KAAKC,SAAL,CAAeb,WAAW1O,IAAX,CAAgBmB,GAAhB,CAAoB,aAAK;AAAE,EAAA,aAAON,EAAEpC,IAAT,CAAe,OAAOoC,CAAP;AAAU,EAAA,KAApD,CAAf,CAAZ;AACA,EAAA,WAAOoE,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAWuK,MAAX,GAAoB,YAAU;AAC5B,EAAA,QAAIpP,eAAesO,UAAnB,EAA8B;AAC5BtO,EAAAA,oBAAcsO,WAAWtO,WAAX,CAAuBe,GAAvB,CAA2B,UAACN,CAAD,EAAI6F,CAAJ,EAAU;AAAE7F,EAAAA,UAAEpC,IAAF,CAAOwQ,IAAP,GAAe,OAAOpO,CAAP;AAAU,EAAA,OAAhE,CAAd;AACD,EAAA;AACD,EAAA,WAAOoE,UAAP;AACD,EAAA,GALD;;AAOAA,EAAAA,aAAWwK,gBAAX,GAA8B,YAAU;AACtCf,EAAAA,eAAW/N,wBAAX;AACAP,EAAAA,kBAAcsO,WAAWtO,WAAzB;AACA,EAAA,WAAO6E,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAWpG,OAAX,GAAqB,UAAS6Q,CAAT,EAAW;AAC9B,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOX,OAAP;AACvBA,EAAAA,cAAU6Q,CAAV;AACA,EAAA,QAAIhB,UAAJ,EAAgB;AACdA,EAAAA,iBAAWkB,aAAX,CAAyB/Q,OAAzB;AACAuB,EAAAA,oBAAcsO,WAAWtO,WAAzB;AACD,EAAA;AACD,EAAA,WAAO6E,UAAP;AACD,EAAA,GARD;;AAUAA,EAAAA,aAAWjE,QAAX,GAAsB,UAAS0O,CAAT,EAAW;AAC/B,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOwB,QAAP;AACvBA,EAAAA,eAAW0O,CAAX;AACA,EAAA,QAAIhB,UAAJ,EAAgB;AACdA,EAAAA,iBAAWzN,cAAX,CAA0BD,QAA1B;AACAZ,EAAAA,oBAAcsO,WAAWtO,WAAzB;AACD,EAAA;AACD,EAAA,WAAO6E,UAAP;AACD,EAAA,GARD;;AAUAA,EAAAA,aAAW/D,WAAX,GAAyB,UAASwO,CAAT,EAAW;AAClC,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAO0B,WAAP;AACvBA,EAAAA,kBAAcwO,CAAd;AACA,EAAA,QAAIhB,UAAJ,EAAgB;AACdA,EAAAA,iBAAWmB,iBAAX,CAA6B3O,WAA7B;AACAd,EAAAA,oBAAcsO,WAAWtO,WAAzB;AACD,EAAA;AACD,EAAA,WAAO6E,UAAP;AACD,EAAA,GARD;;AAUAA,EAAAA,aAAWxG,IAAX,GAAkB,UAASiR,CAAT,EAAYtD,QAAZ,EAAsB;AACtC,EAAA,QAAI,CAACuD,UAAUnQ,MAAf,EAAuB,OAAOf,IAAP;AACvBA,EAAAA,WAAOiR,CAAP;AACA,EAAA,QAAIhB,UAAJ,EAAgB;AACdA,EAAAA,iBAAWtO,WAAX,CAAuBe,GAAvB,CAA2B,aAAK;;AAE9BN,EAAAA,UAAEpC,IAAF,CAAOG,IAAP,IAAeiC,EAAEpC,IAAF,CAAOG,IAAP,CAAYU,SAAZ,CAAsB,iCAAtB,EAAyDyB,MAAzD,EAAf;AACAF,EAAAA,UAAEpC,IAAF,CAAO8J,WAAP,IAAsB1H,EAAEpC,IAAF,CAAO8J,WAAP,CAAmBjJ,SAAnB,CAA6B,GAA7B,EAAkCyB,MAAlC,EAAtB;AACAF,EAAAA,UAAEpC,IAAF,CAAOC,OAAP,IAAkBmC,EAAEpC,IAAF,CAAOC,OAAP,CAAeY,SAAf,CAAyB,GAAzB,EAA8ByB,MAA9B,EAAlB;AACAF,EAAAA,UAAEpC,IAAF,CAAOE,SAAP,IAAoBkC,EAAEpC,IAAF,CAAOE,SAAP,CAAiBW,SAAjB,CAA2B,GAA3B,EAAgCyB,MAAhC,EAApB;AACAF,EAAAA,UAAEpC,IAAF,CAAO6L,YAAP,GAAsB,EAAtB;AACAzJ,EAAAA,UAAEpC,IAAF,GAASA,IAAT;;AAEAoC,EAAAA,UAAEnC,OAAF,GAAY0N,YAAYA,SAAS1N,OAArB,IAAgCmC,EAAEnC,OAA9C;AACAmC,EAAAA,UAAElC,SAAF,GAAcyN,YAAYA,SAASzN,SAArB,IAAkCkC,EAAElC,SAAlD;AACAkC,EAAAA,UAAEjC,IAAF,GAASwN,YAAYA,SAASxN,IAArB,IAA6BiC,EAAEjC,IAAxC;AACD,EAAA,OAZD;;AAcAwB,EAAAA,oBAAcsO,WAAWtO,WAAzB;AACD,EAAA;AACD,EAAA,WAAO6E,UAAP;AACD,EAAA,GArBD;;AAuBAA,EAAAA,aAAW7E,WAAX,GAAyB,UAASsP,CAAT,EAAY;AACnC,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOkP,cAAcA,WAAWtO,WAAzB,IAAwCA,WAA/C;AACvBA,EAAAA,kBAAcsP,CAAd;AACA,EAAA,WAAOzK,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAWf,OAAX,GAAqB,UAASwL,CAAT,EAAY;AAC/B,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAO0E,OAAP;AACvBA,EAAAA,cAAUwL,CAAV;AACA,EAAA,WAAOzK,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAW5E,SAAX,GAAuB,UAASqP,CAAT,EAAY;AACjC,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOa,SAAP;AACvBA,EAAAA,gBAAYqP,CAAZ;AACA,EAAA,WAAOzK,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAW3E,gBAAX,GAA8B,UAASoP,CAAT,EAAY;AACxC,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOc,gBAAP;AACvBA,EAAAA,uBAAmBoP,CAAnB;AACA,EAAA,WAAOzK,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAW0J,GAAX,GAAiB,UAASe,CAAT,EAAY;AAC3B,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOmP,GAAP;AACvBA,EAAAA,UAAMe,CAAN;AACA,EAAA,WAAOzK,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAWrE,QAAX,GAAsB,UAAS8O,CAAT,EAAY;AAChC,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOoB,QAAP;AACvBA,EAAAA,eAAW8O,CAAX;;AAEA,EAAA,QAAIZ,GAAJ,EAAQ;AACNA,EAAAA,UAAIxP,SAAJ,CAAc,cAAd,EACGwM,OADH,CACW,UADX,EACuBlL,QADvB;AAED,EAAA;;AAED,EAAA,QAAI8N,UAAJ,EAAgB;AACdA,EAAAA,iBAAW9N,QAAX,CAAoBA,QAApB;AACAR,EAAAA,oBAAcsO,WAAWtO,WAAzB;AACD,EAAA;AACD,EAAA,WAAO6E,UAAP;AACD,EAAA,GAdD;;AAgBAA,EAAAA,aAAWyJ,UAAX,GAAwB,UAASgB,CAAT,EAAY;AAClC,EAAA,QAAI,CAACC,UAAUnQ,MAAf,EAAuB,OAAOkP,UAAP;AACvBA,EAAAA,iBAAagB,CAAb;AACA,EAAA,WAAOzK,UAAP;AACD,EAAA,GAJD;;AAMAA,EAAAA,aAAWlC,EAAX,GAAgB,YAAU;AACxB,EAAA,QAAM+M,QAAQlB,qBAAqB7L,EAArB,CAAwBgN,KAAxB,CAA8BnB,oBAA9B,EAAoDe,SAApD,CAAd;AACA,EAAA,WAAOG,UAAUlB,oBAAV,GAAiC3J,UAAjC,GAA8C6K,KAArD;AACD,EAAA,GAHD;;AAKA,EAAA,SAAO7K,UAAP;AAED,EAAA;;AC3LD,cAAe;AACbA,EAAAA,wBADa;AAEb+K,EAAAA,sBAAqB5H,IAFR;AAGb6H,EAAAA,mBAAkBhD,OAHL;AAIbiD,EAAAA,qBAAoBhD,SAJP;AAKbiD,EAAAA,0BAAyB/C,cALZ;AAMbgD,EAAAA,0BAAyBjD,cANZ;AAObkD,EAAAA,2BAA0B/C,eAPb;AAQbgD,EAAAA,yBAAwB/C,aARX;AASbgD,EAAAA,yBAAwB9C,aATX;AAUb+C,EAAAA,mBAAkBnD,OAVL;AAWboD,EAAAA,wBAAuBvE;AAXV,EAAA,CAAf;;;;;;;;;;;;;;;;;"}